package com.autentia.intra.dao.search;

import com.autentia.intra.businessobject.*;
import com.autentia.intra.dao.SearchCriteria;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;

/**
 * Class to search for User objects
 *
 * @author stajanov code generator
 */
public class UserSearch extends SearchCriteria {
/* generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;


        if (isActiveSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getActive() == null) {
                ret.append("active is NULL");
            } else {
                ret.append("active = :arg" + (iArgNum++));
            }
        }


        if (isLoginSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLogin() == null) {
                ret.append("login is NULL");
            } else {
                ret.append("login = :arg" + (iArgNum++));
            }
        }


        if (isPasswordSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPassword() == null) {
                ret.append("password is NULL");
            } else {
                ret.append("password = :arg" + (iArgNum++));
            }
        }


        if (isNameSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getName() == null) {
                ret.append("name is NULL");
            } else {
                ret.append("name like :arg" + (iArgNum++));
            }
        }


        if (isStartStartDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startStartDate == null) {
                ret.append("startDate=:arg" + (iArgNum++));
            } else {
                ret.append("startDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndStartDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endStartDate == null) {
                ret.append("startDate=:arg" + (iArgNum++));
            } else {
                ret.append("startDate<=:arg" + (iArgNum++));
            }
        }


        if (isNifSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getNif() == null) {
                ret.append("nif is NULL");
            } else {
                ret.append("nif = :arg" + (iArgNum++));
            }
        }


        if (isGenreSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getGenre() == null) {
                ret.append("genre is NULL");
            } else {
                ret.append("genre = :arg" + (iArgNum++));
            }
        }


        if (isSocialSecurityNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getSocialSecurityNumber() == null) {
                ret.append("socialSecurityNumber is NULL");
            } else {
                ret.append("socialSecurityNumber = :arg" + (iArgNum++));
            }
        }


        if (isWorkingInClientSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getWorkingInClient() == null) {
                ret.append("workingInClient is NULL");
            } else {
                ret.append("workingInClient = :arg" + (iArgNum++));
            }
        }


        if (isStartBirthDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startBirthDate == null) {
                ret.append("birthDate=:arg" + (iArgNum++));
            } else {
                ret.append("birthDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndBirthDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endBirthDate == null) {
                ret.append("birthDate=:arg" + (iArgNum++));
            } else {
                ret.append("birthDate<=:arg" + (iArgNum++));
            }
        }


        if (isMarriedSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getMarried() == null) {
                ret.append("married is NULL");
            } else {
                ret.append("married = :arg" + (iArgNum++));
            }
        }


        if (isChildrenNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getChildrenNumber() == null) {
                ret.append("childrenNumber is NULL");
            } else {
                ret.append("childrenNumber = :arg" + (iArgNum++));
            }
        }


        if (isTravelAvailabilitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTravelAvailability() == null) {
                ret.append("travelAvailability is NULL");
            } else {
                ret.append("travelAvailability = :arg" + (iArgNum++));
            }
        }


        if (isAcademicQualificationSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAcademicQualification() == null) {
                ret.append("academicQualification is NULL");
            } else {
                ret.append("academicQualification = :arg" + (iArgNum++));
            }
        }


        if (isEmailSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getEmail() == null) {
                ret.append("email is NULL");
            } else {
                ret.append("email = :arg" + (iArgNum++));
            }
        }


        if (isPhoneSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPhone() == null) {
                ret.append("phone is NULL");
            } else {
                ret.append("phone = :arg" + (iArgNum++));
            }
        }


        if (isMobileSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getMobile() == null) {
                ret.append("mobile is NULL");
            } else {
                ret.append("mobile = :arg" + (iArgNum++));
            }
        }


        if (isStreetSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getStreet() == null) {
                ret.append("street is NULL");
            } else {
                ret.append("street = :arg" + (iArgNum++));
            }
        }


        if (isPostalCodeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPostalCode() == null) {
                ret.append("postalCode is NULL");
            } else {
                ret.append("postalCode = :arg" + (iArgNum++));
            }
        }


        if (isCitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCity() == null) {
                ret.append("city is NULL");
            } else {
                ret.append("city = :arg" + (iArgNum++));
            }
        }


        if (isBankSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBank() == null) {
                ret.append("bank is NULL");
            } else {
                ret.append("bank = :arg" + (iArgNum++));
            }
        }


        if (isAccountSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAccount() == null) {
                ret.append("account is NULL");
            } else {
                ret.append("account = :arg" + (iArgNum++));
            }
        }


        if (isSalarySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getSalary() == null) {
                ret.append("salary is NULL");
            } else {
                ret.append("salary = :arg" + (iArgNum++));
            }
        }


        if (isSalaryExtrasSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getSalaryExtras() == null) {
                ret.append("salaryExtras is NULL");
            } else {
                ret.append("salaryExtras = :arg" + (iArgNum++));
            }
        }


        if (isDrivenLicenseTypeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDrivenLicenseType() == null) {
                ret.append("drivenLicenseType is NULL");
            } else {
                ret.append("drivenLicenseType = :arg" + (iArgNum++));
            }
        }


        if (isVehicleTypeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getVehicleType() == null) {
                ret.append("vehicleType is NULL");
            } else {
                ret.append("vehicleType = :arg" + (iArgNum++));
            }
        }


        if (isLicensePlateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLicensePlate() == null) {
                ret.append("licensePlate is NULL");
            } else {
                ret.append("licensePlate = :arg" + (iArgNum++));
            }
        }


        if (isSecurityCardSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getSecurityCard() == null) {
                ret.append("securityCard is NULL");
            } else {
                ret.append("securityCard like :arg" + (iArgNum++));
            }
        }


        if (isHealthInsuranceSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getHealthInsurance() == null) {
                ret.append("healthInsurance is NULL");
            } else {
                ret.append("healthInsurance like :arg" + (iArgNum++));
            }
        }


        if (isNotesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getNotes() == null) {
                ret.append("notes is NULL");
            } else {
                ret.append("notes = :arg" + (iArgNum++));
            }
        }


        if (isPhotoSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPhoto() == null) {
                ret.append("photo is NULL");
            } else {
                ret.append("photo = :arg" + (iArgNum++));
            }
        }


        if (isStartEndTestPeriodDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startEndTestPeriodDate == null) {
                ret.append("endTestPeriodDate=:arg" + (iArgNum++));
            } else {
                ret.append("endTestPeriodDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndEndTestPeriodDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endEndTestPeriodDate == null) {
                ret.append("endTestPeriodDate=:arg" + (iArgNum++));
            } else {
                ret.append("endTestPeriodDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartEndContractDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startEndContractDate == null) {
                ret.append("endContractDate=:arg" + (iArgNum++));
            } else {
                ret.append("endContractDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndEndContractDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endEndContractDate == null) {
                ret.append("endContractDate=:arg" + (iArgNum++));
            } else {
                ret.append("endContractDate<=:arg" + (iArgNum++));
            }
        }


        if (isDayDurationSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDayDuration() == null) {
                ret.append("dayDuration is NULL");
            } else {
                ret.append("dayDuration = :arg" + (iArgNum++));
            }
        }


        if (isContractObservationsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getContractObservations() == null) {
                ret.append("contractObservations is NULL");
            } else {
                ret.append("contractObservations = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }


        if (isRoleSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getRole() == null) {
                ret.append("role is NULL");
            } else {
                ret.append("role = :arg" + (iArgNum++));
            }
        }


        if (isCategorySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCategory() == null) {
                ret.append("category is NULL");
            } else {
                ret.append("category = :arg" + (iArgNum++));
            }
        }


        if (isProvinceSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getProvince() == null) {
                ret.append("province is NULL");
            } else {
                ret.append("province = :arg" + (iArgNum++));
            }
        }


        if (isDocumentCategorySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDocumentCategory() == null) {
                ret.append("documentCategory is NULL");
            } else {
                ret.append("documentCategory = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartment() == null) {
                ret.append("department is NULL");
            } else {
                ret.append("department = :arg" + (iArgNum++));
            }
        }


        if (isContractTypeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getContractType() == null) {
                ret.append("contractType is NULL");
            } else {
                ret.append("contractType = :arg" + (iArgNum++));
            }
        }


        if (isAgreementSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAgreement() == null) {
                ret.append("agreement is NULL");
            } else {
                ret.append("agreement = :arg" + (iArgNum++));
            }
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();


        if (isActiveSet() && getActive() != null) {
            ret.add(active);
        }


        if (isLoginSet() && getLogin() != null) {
            ret.add(login);
        }


        if (isPasswordSet() && getPassword() != null) {
            ret.add(password);
        }


        if (isNameSet() && getName() != null) {
            ret.add(name);
        }


        if (isStartStartDateSet()) {
            ret.add(startStartDate);
        }
        if (isEndStartDateSet()) {
            ret.add(endStartDate);
        }


        if (isNifSet() && getNif() != null) {
            ret.add(nif);
        }


        if (isGenreSet() && getGenre() != null) {
            ret.add(genre);
        }


        if (isSocialSecurityNumberSet() && getSocialSecurityNumber() != null) {
            ret.add(socialSecurityNumber);
        }


        if (isWorkingInClientSet() && getWorkingInClient() != null) {
            ret.add(workingInClient);
        }


        if (isStartBirthDateSet()) {
            ret.add(startBirthDate);
        }
        if (isEndBirthDateSet()) {
            ret.add(endBirthDate);
        }


        if (isMarriedSet() && getMarried() != null) {
            ret.add(married);
        }


        if (isChildrenNumberSet() && getChildrenNumber() != null) {
            ret.add(childrenNumber);
        }


        if (isTravelAvailabilitySet() && getTravelAvailability() != null) {
            ret.add(travelAvailability);
        }


        if (isAcademicQualificationSet() && getAcademicQualification() != null) {
            ret.add(academicQualification);
        }


        if (isEmailSet() && getEmail() != null) {
            ret.add(email);
        }


        if (isPhoneSet() && getPhone() != null) {
            ret.add(phone);
        }


        if (isMobileSet() && getMobile() != null) {
            ret.add(mobile);
        }


        if (isStreetSet() && getStreet() != null) {
            ret.add(street);
        }


        if (isPostalCodeSet() && getPostalCode() != null) {
            ret.add(postalCode);
        }


        if (isCitySet() && getCity() != null) {
            ret.add(city);
        }


        if (isBankSet() && getBank() != null) {
            ret.add(bank);
        }


        if (isAccountSet() && getAccount() != null) {
            ret.add(account);
        }


        if (isSalarySet() && getSalary() != null) {
            ret.add(salary);
        }


        if (isSalaryExtrasSet() && getSalaryExtras() != null) {
            ret.add(salaryExtras);
        }


        if (isDrivenLicenseTypeSet() && getDrivenLicenseType() != null) {
            ret.add(drivenLicenseType);
        }


        if (isVehicleTypeSet() && getVehicleType() != null) {
            ret.add(vehicleType);
        }


        if (isLicensePlateSet() && getLicensePlate() != null) {
            ret.add(licensePlate);
        }


        if (isSecurityCardSet() && getSecurityCard() != null) {
            ret.add(securityCard);
        }


        if (isHealthInsuranceSet() && getHealthInsurance() != null) {
            ret.add(healthInsurance);
        }


        if (isNotesSet() && getNotes() != null) {
            ret.add(notes);
        }


        if (isPhotoSet() && getPhoto() != null) {
            ret.add(photo);
        }


        if (isStartEndTestPeriodDateSet()) {
            ret.add(startEndTestPeriodDate);
        }
        if (isEndEndTestPeriodDateSet()) {
            ret.add(endEndTestPeriodDate);
        }


        if (isStartEndContractDateSet()) {
            ret.add(startEndContractDate);
        }
        if (isEndEndContractDateSet()) {
            ret.add(endEndContractDate);
        }


        if (isDayDurationSet() && getDayDuration() != null) {
            ret.add(dayDuration);
        }


        if (isContractObservationsSet() && getContractObservations() != null) {
            ret.add(contractObservations);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }


        if (isRoleSet() && getRole() != null) {
            ret.add(role);
        }


        if (isCategorySet() && getCategory() != null) {
            ret.add(category);
        }


        if (isProvinceSet() && getProvince() != null) {
            ret.add(province);
        }


        if (isDocumentCategorySet() && getDocumentCategory() != null) {
            ret.add(documentCategory);
        }


        if (isDepartmentSet() && getDepartment() != null) {
            ret.add(department);
        }


        if (isContractTypeSet() && getContractType() != null) {
            ret.add(contractType);
        }


        if (isAgreementSet() && getAgreement() != null) {
            ret.add(agreement);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {


        unsetActive();


        unsetLogin();


        unsetPassword();


        unsetName();


        unsetStartStartDate();
        unsetEndStartDate();


        unsetNif();


        unsetGenre();


        unsetSocialSecurityNumber();


        unsetWorkingInClient();


        unsetStartBirthDate();
        unsetEndBirthDate();


        unsetMarried();


        unsetChildrenNumber();


        unsetTravelAvailability();


        unsetAcademicQualification();


        unsetEmail();


        unsetPhone();


        unsetMobile();


        unsetStreet();


        unsetPostalCode();


        unsetCity();


        unsetBank();


        unsetAccount();


        unsetSalary();


        unsetSalaryExtras();


        unsetDrivenLicenseType();


        unsetVehicleType();


        unsetLicensePlate();


        unsetSecurityCard();


        unsetHealthInsurance();


        unsetNotes();


        unsetPhoto();


        unsetStartEndTestPeriodDate();
        unsetEndEndTestPeriodDate();


        unsetStartEndContractDate();
        unsetEndEndContractDate();


        unsetDayDuration();


        unsetContractObservations();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();


        unsetRole();


        unsetCategory();


        unsetProvince();


        unsetDocumentCategory();


        unsetDepartment();


        unsetContractType();


        unsetAgreement();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("UserSearch{");


        if (isActiveSet()) {
            ret.append("(active");
            ret.append("=" + active);
            ret.append(")");
        }


        if (isLoginSet()) {
            ret.append("(login");
            ret.append("=" + login);
            ret.append(")");
        }


        if (isPasswordSet()) {
            ret.append("(password");
            ret.append("=" + password);
            ret.append(")");
        }


        if (isNameSet()) {
            ret.append("(name");
            ret.append("=" + name);
            ret.append(")");
        }


        if (isStartStartDateSet()) {
            ret.append("(startStartDate");
            ret.append("=" + startStartDate);
            ret.append(")");
        }
        if (isEndStartDateSet()) {
            ret.append("(endStartDate");
            ret.append("=" + endStartDate);
            ret.append(")");
        }


        if (isNifSet()) {
            ret.append("(nif");
            ret.append("=" + nif);
            ret.append(")");
        }


        if (isGenreSet()) {
            ret.append("(genre");
            ret.append("=" + genre);
            ret.append(")");
        }


        if (isSocialSecurityNumberSet()) {
            ret.append("(socialSecurityNumber");
            ret.append("=" + socialSecurityNumber);
            ret.append(")");
        }


        if (isWorkingInClientSet()) {
            ret.append("(workingInClient");
            ret.append("=" + workingInClient);
            ret.append(")");
        }


        if (isStartBirthDateSet()) {
            ret.append("(startBirthDate");
            ret.append("=" + startBirthDate);
            ret.append(")");
        }
        if (isEndBirthDateSet()) {
            ret.append("(endBirthDate");
            ret.append("=" + endBirthDate);
            ret.append(")");
        }


        if (isMarriedSet()) {
            ret.append("(married");
            ret.append("=" + married);
            ret.append(")");
        }


        if (isChildrenNumberSet()) {
            ret.append("(childrenNumber");
            ret.append("=" + childrenNumber);
            ret.append(")");
        }


        if (isTravelAvailabilitySet()) {
            ret.append("(travelAvailability");
            ret.append("=" + travelAvailability);
            ret.append(")");
        }


        if (isAcademicQualificationSet()) {
            ret.append("(academicQualification");
            ret.append("=" + academicQualification);
            ret.append(")");
        }


        if (isEmailSet()) {
            ret.append("(email");
            ret.append("=" + email);
            ret.append(")");
        }


        if (isPhoneSet()) {
            ret.append("(phone");
            ret.append("=" + phone);
            ret.append(")");
        }


        if (isMobileSet()) {
            ret.append("(mobile");
            ret.append("=" + mobile);
            ret.append(")");
        }


        if (isStreetSet()) {
            ret.append("(street");
            ret.append("=" + street);
            ret.append(")");
        }


        if (isPostalCodeSet()) {
            ret.append("(postalCode");
            ret.append("=" + postalCode);
            ret.append(")");
        }


        if (isCitySet()) {
            ret.append("(city");
            ret.append("=" + city);
            ret.append(")");
        }


        if (isBankSet()) {
            ret.append("(bank");
            ret.append("=" + bank);
            ret.append(")");
        }


        if (isAccountSet()) {
            ret.append("(account");
            ret.append("=" + account);
            ret.append(")");
        }


        if (isSalarySet()) {
            ret.append("(salary");
            ret.append("=" + salary);
            ret.append(")");
        }


        if (isSalaryExtrasSet()) {
            ret.append("(salaryExtras");
            ret.append("=" + salaryExtras);
            ret.append(")");
        }


        if (isDrivenLicenseTypeSet()) {
            ret.append("(drivenLicenseType");
            ret.append("=" + drivenLicenseType);
            ret.append(")");
        }


        if (isVehicleTypeSet()) {
            ret.append("(vehicleType");
            ret.append("=" + vehicleType);
            ret.append(")");
        }


        if (isLicensePlateSet()) {
            ret.append("(licensePlate");
            ret.append("=" + licensePlate);
            ret.append(")");
        }


        if (isSecurityCardSet()) {
            ret.append("(securityCard");
            ret.append("=" + securityCard);
            ret.append(")");
        }


        if (isHealthInsuranceSet()) {
            ret.append("(healthInsurance");
            ret.append("=" + healthInsurance);
            ret.append(")");
        }


        if (isNotesSet()) {
            ret.append("(notes");
            ret.append("=" + notes);
            ret.append(")");
        }


        if (isPhotoSet()) {
            ret.append("(photo");
            ret.append("=" + photo);
            ret.append(")");
        }


        if (isStartEndTestPeriodDateSet()) {
            ret.append("(startEndTestPeriodDate");
            ret.append("=" + startEndTestPeriodDate);
            ret.append(")");
        }
        if (isEndEndTestPeriodDateSet()) {
            ret.append("(endEndTestPeriodDate");
            ret.append("=" + endEndTestPeriodDate);
            ret.append(")");
        }


        if (isStartEndContractDateSet()) {
            ret.append("(startEndContractDate");
            ret.append("=" + startEndContractDate);
            ret.append(")");
        }
        if (isEndEndContractDateSet()) {
            ret.append("(endEndContractDate");
            ret.append("=" + endEndContractDate);
            ret.append(")");
        }


        if (isDayDurationSet()) {
            ret.append("(dayDuration");
            ret.append("=" + dayDuration);
            ret.append(")");
        }


        if (isContractObservationsSet()) {
            ret.append("(contractObservations");
            ret.append("=" + contractObservations);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }


        if (isRoleSet()) {
            ret.append("(role");
            ret.append("=" + role);
            ret.append(")");
        }


        if (isCategorySet()) {
            ret.append("(category");
            ret.append("=" + category);
            ret.append(")");
        }


        if (isProvinceSet()) {
            ret.append("(province");
            ret.append("=" + province);
            ret.append(")");
        }


        if (isDocumentCategorySet()) {
            ret.append("(documentCategory");
            ret.append("=" + documentCategory);
            ret.append(")");
        }


        if (isDepartmentSet()) {
            ret.append("(department");
            ret.append("=" + department);
            ret.append(")");
        }


        if (isContractTypeSet()) {
            ret.append("(contractType");
            ret.append("=" + contractType);
            ret.append(")");
        }


        if (isAgreementSet()) {
            ret.append("(agreement");
            ret.append("=" + agreement);
            ret.append(")");
        }


        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isActiveSet() {
        return activeSet;
    }

    public java.lang.Boolean getActive() {
        return active;
    }

    public void setActive(java.lang.Boolean active) {
        this.active = active;
        this.activeSet = true;
    }

    public void unsetActive() {
        this.activeSet = false;
    }


    public boolean isLoginSet() {
        return loginSet;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
        this.loginSet = true;
    }

    public void unsetLogin() {
        this.loginSet = false;
    }


    public boolean isPasswordSet() {
        return passwordSet;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
        this.passwordSet = true;
    }

    public void unsetPassword() {
        this.passwordSet = false;
    }


    public boolean isNameSet() {
        return nameSet;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
        this.nameSet = true;
    }

    public void unsetName() {
        this.nameSet = false;
    }


    public boolean isStartStartDateSet() {
        return startStartDateSet;
    }

    public Date getStartStartDate() {
        return startStartDate;
    }

    public void setStartStartDate(Date startStartDate) {
        this.startStartDate = startStartDate;
        this.startStartDateSet = true;
    }

    public void unsetStartStartDate() {
        this.startStartDateSet = false;
    }

    public boolean isEndStartDateSet() {
        return endStartDateSet;
    }

    public Date getEndStartDate() {
        return endStartDate;
    }

    public void setEndStartDate(Date endStartDate) {
        this.endStartDate = endStartDate;
        this.endStartDateSet = true;
    }

    public void unsetEndStartDate() {
        this.endStartDateSet = false;
    }


    public boolean isNifSet() {
        return nifSet;
    }

    public String getNif() {
        return nif;
    }

    public void setNif(String nif) {
        this.nif = nif;
        this.nifSet = true;
    }

    public void unsetNif() {
        this.nifSet = false;
    }


    public boolean isGenreSet() {
        return genreSet;
    }

    public UserGenre getGenre() {
        return genre;
    }

    public void setGenre(UserGenre genre) {
        this.genre = genre;
        this.genreSet = true;
    }

    public void unsetGenre() {
        this.genreSet = false;
    }


    public boolean isSocialSecurityNumberSet() {
        return socialSecurityNumberSet;
    }

    public String getSocialSecurityNumber() {
        return socialSecurityNumber;
    }

    public void setSocialSecurityNumber(String socialSecurityNumber) {
        this.socialSecurityNumber = socialSecurityNumber;
        this.socialSecurityNumberSet = true;
    }

    public void unsetSocialSecurityNumber() {
        this.socialSecurityNumberSet = false;
    }


    public boolean isWorkingInClientSet() {
        return workingInClientSet;
    }

    public java.lang.Boolean getWorkingInClient() {
        return workingInClient;
    }

    public void setWorkingInClient(java.lang.Boolean workingInClient) {
        this.workingInClient = workingInClient;
        this.workingInClientSet = true;
    }

    public void unsetWorkingInClient() {
        this.workingInClientSet = false;
    }


    public boolean isStartBirthDateSet() {
        return startBirthDateSet;
    }

    public Date getStartBirthDate() {
        return startBirthDate;
    }

    public void setStartBirthDate(Date startBirthDate) {
        this.startBirthDate = startBirthDate;
        this.startBirthDateSet = true;
    }

    public void unsetStartBirthDate() {
        this.startBirthDateSet = false;
    }

    public boolean isEndBirthDateSet() {
        return endBirthDateSet;
    }

    public Date getEndBirthDate() {
        return endBirthDate;
    }

    public void setEndBirthDate(Date endBirthDate) {
        this.endBirthDate = endBirthDate;
        this.endBirthDateSet = true;
    }

    public void unsetEndBirthDate() {
        this.endBirthDateSet = false;
    }


    public boolean isMarriedSet() {
        return marriedSet;
    }

    public java.lang.Boolean getMarried() {
        return married;
    }

    public void setMarried(java.lang.Boolean married) {
        this.married = married;
        this.marriedSet = true;
    }

    public void unsetMarried() {
        this.marriedSet = false;
    }


    public boolean isChildrenNumberSet() {
        return childrenNumberSet;
    }

    public java.lang.Integer getChildrenNumber() {
        return childrenNumber;
    }

    public void setChildrenNumber(java.lang.Integer childrenNumber) {
        this.childrenNumber = childrenNumber;
        this.childrenNumberSet = true;
    }

    public void unsetChildrenNumber() {
        this.childrenNumberSet = false;
    }


    public boolean isTravelAvailabilitySet() {
        return travelAvailabilitySet;
    }

    public String getTravelAvailability() {
        return travelAvailability;
    }

    public void setTravelAvailability(String travelAvailability) {
        this.travelAvailability = travelAvailability;
        this.travelAvailabilitySet = true;
    }

    public void unsetTravelAvailability() {
        this.travelAvailabilitySet = false;
    }


    public boolean isAcademicQualificationSet() {
        return academicQualificationSet;
    }

    public String getAcademicQualification() {
        return academicQualification;
    }

    public void setAcademicQualification(String academicQualification) {
        this.academicQualification = academicQualification;
        this.academicQualificationSet = true;
    }

    public void unsetAcademicQualification() {
        this.academicQualificationSet = false;
    }


    public boolean isEmailSet() {
        return emailSet;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
        this.emailSet = true;
    }

    public void unsetEmail() {
        this.emailSet = false;
    }


    public boolean isPhoneSet() {
        return phoneSet;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
        this.phoneSet = true;
    }

    public void unsetPhone() {
        this.phoneSet = false;
    }


    public boolean isMobileSet() {
        return mobileSet;
    }

    public String getMobile() {
        return mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
        this.mobileSet = true;
    }

    public void unsetMobile() {
        this.mobileSet = false;
    }


    public boolean isStreetSet() {
        return streetSet;
    }

    public String getStreet() {
        return street;
    }

    public void setStreet(String street) {
        this.street = street;
        this.streetSet = true;
    }

    public void unsetStreet() {
        this.streetSet = false;
    }


    public boolean isPostalCodeSet() {
        return postalCodeSet;
    }

    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
        this.postalCodeSet = true;
    }

    public void unsetPostalCode() {
        this.postalCodeSet = false;
    }


    public boolean isCitySet() {
        return citySet;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
        this.citySet = true;
    }

    public void unsetCity() {
        this.citySet = false;
    }


    public boolean isBankSet() {
        return bankSet;
    }

    public String getBank() {
        return bank;
    }

    public void setBank(String bank) {
        this.bank = bank;
        this.bankSet = true;
    }

    public void unsetBank() {
        this.bankSet = false;
    }


    public boolean isAccountSet() {
        return accountSet;
    }

    public String getAccount() {
        return account;
    }

    public void setAccount(String account) {
        this.account = account;
        this.accountSet = true;
    }

    public void unsetAccount() {
        this.accountSet = false;
    }


    public boolean isSalarySet() {
        return salarySet;
    }

    public BigDecimal getSalary() {
        return salary;
    }

    public void setSalary(BigDecimal salary) {
        this.salary = salary;
        this.salarySet = true;
    }

    public void unsetSalary() {
        this.salarySet = false;
    }


    public boolean isSalaryExtrasSet() {
        return salaryExtrasSet;
    }

    public BigDecimal getSalaryExtras() {
        return salaryExtras;
    }

    public void setSalaryExtras(BigDecimal salaryExtras) {
        this.salaryExtras = salaryExtras;
        this.salaryExtrasSet = true;
    }

    public void unsetSalaryExtras() {
        this.salaryExtrasSet = false;
    }


    public boolean isDrivenLicenseTypeSet() {
        return drivenLicenseTypeSet;
    }

    public String getDrivenLicenseType() {
        return drivenLicenseType;
    }

    public void setDrivenLicenseType(String drivenLicenseType) {
        this.drivenLicenseType = drivenLicenseType;
        this.drivenLicenseTypeSet = true;
    }

    public void unsetDrivenLicenseType() {
        this.drivenLicenseTypeSet = false;
    }


    public boolean isVehicleTypeSet() {
        return vehicleTypeSet;
    }

    public String getVehicleType() {
        return vehicleType;
    }

    public void setVehicleType(String vehicleType) {
        this.vehicleType = vehicleType;
        this.vehicleTypeSet = true;
    }

    public void unsetVehicleType() {
        this.vehicleTypeSet = false;
    }


    public boolean isLicensePlateSet() {
        return licensePlateSet;
    }

    public String getLicensePlate() {
        return licensePlate;
    }

    public void setLicensePlate(String licensePlate) {
        this.licensePlate = licensePlate;
        this.licensePlateSet = true;
    }

    public void unsetLicensePlate() {
        this.licensePlateSet = false;
    }


    public boolean isSecurityCardSet() {
        return securityCardSet;
    }

    public String getSecurityCard() {
        return securityCard;
    }

    public void setSecurityCard(String securityCard) {
        this.securityCard = securityCard;
        this.securityCardSet = true;
    }

    public void unsetSecurityCard() {
        this.securityCardSet = false;
    }


    public boolean isHealthInsuranceSet() {
        return healthInsuranceSet;
    }

    public String getHealthInsurance() {
        return healthInsurance;
    }

    public void setHealthInsurance(String healthInsurance) {
        this.healthInsurance = healthInsurance;
        this.healthInsuranceSet = true;
    }

    public void unsetHealthInsurance() {
        this.healthInsuranceSet = false;
    }


    public boolean isNotesSet() {
        return notesSet;
    }

    public String getNotes() {
        return notes;
    }

    public void setNotes(String notes) {
        this.notes = notes;
        this.notesSet = true;
    }

    public void unsetNotes() {
        this.notesSet = false;
    }


    public boolean isPhotoSet() {
        return photoSet;
    }

    public String getPhoto() {
        return photo;
    }

    public void setPhoto(String photo) {
        this.photo = photo;
        this.photoSet = true;
    }

    public void unsetPhoto() {
        this.photoSet = false;
    }


    public boolean isStartEndTestPeriodDateSet() {
        return startEndTestPeriodDateSet;
    }

    public Date getStartEndTestPeriodDate() {
        return startEndTestPeriodDate;
    }

    public void setStartEndTestPeriodDate(Date startEndTestPeriodDate) {
        this.startEndTestPeriodDate = startEndTestPeriodDate;
        this.startEndTestPeriodDateSet = true;
    }

    public void unsetStartEndTestPeriodDate() {
        this.startEndTestPeriodDateSet = false;
    }

    public boolean isEndEndTestPeriodDateSet() {
        return endEndTestPeriodDateSet;
    }

    public Date getEndEndTestPeriodDate() {
        return endEndTestPeriodDate;
    }

    public void setEndEndTestPeriodDate(Date endEndTestPeriodDate) {
        this.endEndTestPeriodDate = endEndTestPeriodDate;
        this.endEndTestPeriodDateSet = true;
    }

    public void unsetEndEndTestPeriodDate() {
        this.endEndTestPeriodDateSet = false;
    }


    public boolean isStartEndContractDateSet() {
        return startEndContractDateSet;
    }

    public Date getStartEndContractDate() {
        return startEndContractDate;
    }

    public void setStartEndContractDate(Date startEndContractDate) {
        this.startEndContractDate = startEndContractDate;
        this.startEndContractDateSet = true;
    }

    public void unsetStartEndContractDate() {
        this.startEndContractDateSet = false;
    }

    public boolean isEndEndContractDateSet() {
        return endEndContractDateSet;
    }

    public Date getEndEndContractDate() {
        return endEndContractDate;
    }

    public void setEndEndContractDate(Date endEndContractDate) {
        this.endEndContractDate = endEndContractDate;
        this.endEndContractDateSet = true;
    }

    public void unsetEndEndContractDate() {
        this.endEndContractDateSet = false;
    }


    public boolean isDayDurationSet() {
        return dayDurationSet;
    }

    public java.lang.Integer getDayDuration() {
        return dayDuration;
    }

    public void setDayDuration(java.lang.Integer dayDuration) {
        this.dayDuration = dayDuration;
        this.dayDurationSet = true;
    }

    public void unsetDayDuration() {
        this.dayDurationSet = false;
    }


    public boolean isContractObservationsSet() {
        return contractObservationsSet;
    }

    public String getContractObservations() {
        return contractObservations;
    }

    public void setContractObservations(String contractObservations) {
        this.contractObservations = contractObservations;
        this.contractObservationsSet = true;
    }

    public void unsetContractObservations() {
        this.contractObservationsSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }


    public boolean isRoleSet() {
        return roleSet;
    }

    public Role getRole() {
        return role;
    }

    public void setRole(Role role) {
        this.role = role;
        this.roleSet = true;
    }

    public void unsetRole() {
        this.roleSet = false;
    }


    public boolean isCategorySet() {
        return categorySet;
    }

    public UserCategory getCategory() {
        return category;
    }

    public void setCategory(UserCategory category) {
        this.category = category;
        this.categorySet = true;
    }

    public void unsetCategory() {
        this.categorySet = false;
    }


    public boolean isProvinceSet() {
        return provinceSet;
    }

    public Province getProvince() {
        return province;
    }

    public void setProvince(Province province) {
        this.province = province;
        this.provinceSet = true;
    }

    public void unsetProvince() {
        this.provinceSet = false;
    }


    public boolean isDocumentCategorySet() {
        return documentCategorySet;
    }

    public DocumentCategory getDocumentCategory() {
        return documentCategory;
    }

    public void setDocumentCategory(DocumentCategory documentCategory) {
        this.documentCategory = documentCategory;
        this.documentCategorySet = true;
    }

    public void unsetDocumentCategory() {
        this.documentCategorySet = false;
    }


    public boolean isDepartmentSet() {
        return departmentSet;
    }

    public Department getDepartment() {
        return department;
    }

    public void setDepartment(Department department) {
        this.department = department;
        this.departmentSet = true;
    }

    public void unsetDepartment() {
        this.departmentSet = false;
    }


    public boolean isContractTypeSet() {
        return contractTypeSet;
    }

    public ContractType getContractType() {
        return contractType;
    }

    public void setContractType(ContractType contractType) {
        this.contractType = contractType;
        this.contractTypeSet = true;
    }

    public void unsetContractType() {
        this.contractTypeSet = false;
    }


    public boolean isAgreementSet() {
        return agreementSet;
    }

    public WorkingAgreement getAgreement() {
        return agreement;
    }

    public void setAgreement(WorkingAgreement agreement) {
        this.agreement = agreement;
        this.agreementSet = true;
    }

    public void unsetAgreement() {
        this.agreementSet = false;
    }

    // Fields


    private boolean activeSet;
    private java.lang.Boolean active;


    private boolean loginSet;
    private String login;


    private boolean passwordSet;
    private String password;


    private boolean nameSet;
    private String name;


    private boolean startStartDateSet;
    private Date startStartDate;
    private boolean endStartDateSet;
    private Date endStartDate;


    private boolean nifSet;
    private String nif;


    private boolean genreSet;
    private UserGenre genre;


    private boolean socialSecurityNumberSet;
    private String socialSecurityNumber;


    private boolean workingInClientSet;
    private java.lang.Boolean workingInClient;


    private boolean startBirthDateSet;
    private Date startBirthDate;
    private boolean endBirthDateSet;
    private Date endBirthDate;


    private boolean marriedSet;
    private java.lang.Boolean married;


    private boolean childrenNumberSet;
    private java.lang.Integer childrenNumber;


    private boolean travelAvailabilitySet;
    private String travelAvailability;


    private boolean academicQualificationSet;
    private String academicQualification;


    private boolean emailSet;
    private String email;


    private boolean phoneSet;
    private String phone;


    private boolean mobileSet;
    private String mobile;


    private boolean streetSet;
    private String street;


    private boolean postalCodeSet;
    private String postalCode;


    private boolean citySet;
    private String city;


    private boolean bankSet;
    private String bank;


    private boolean accountSet;
    private String account;


    private boolean salarySet;
    private BigDecimal salary;


    private boolean salaryExtrasSet;
    private BigDecimal salaryExtras;


    private boolean drivenLicenseTypeSet;
    private String drivenLicenseType;


    private boolean vehicleTypeSet;
    private String vehicleType;


    private boolean licensePlateSet;
    private String licensePlate;


    private boolean securityCardSet;
    private String securityCard;


    private boolean healthInsuranceSet;
    private String healthInsurance;


    private boolean notesSet;
    private String notes;


    private boolean photoSet;
    private String photo;


    private boolean startEndTestPeriodDateSet;
    private Date startEndTestPeriodDate;
    private boolean endEndTestPeriodDateSet;
    private Date endEndTestPeriodDate;


    private boolean startEndContractDateSet;
    private Date startEndContractDate;
    private boolean endEndContractDateSet;
    private Date endEndContractDate;


    private boolean dayDurationSet;
    private java.lang.Integer dayDuration;


    private boolean contractObservationsSet;
    private String contractObservations;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    private boolean roleSet;
    private Role role;


    private boolean categorySet;
    private UserCategory category;


    private boolean provinceSet;
    private Province province;


    private boolean documentCategorySet;
    private DocumentCategory documentCategory;


    private boolean departmentSet;
    private Department department;


    private boolean contractTypeSet;
    private ContractType contractType;


    private boolean agreementSet;
    private WorkingAgreement agreement;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || activeSet || loginSet || passwordSet || nameSet || startStartDateSet || endStartDateSet || nifSet || genreSet || socialSecurityNumberSet || workingInClientSet || startBirthDateSet || endBirthDateSet || marriedSet || childrenNumberSet || travelAvailabilitySet || academicQualificationSet || emailSet || phoneSet || mobileSet || streetSet || postalCodeSet || citySet || bankSet || accountSet || salarySet || salaryExtrasSet || drivenLicenseTypeSet || vehicleTypeSet || licensePlateSet || securityCardSet || healthInsuranceSet || notesSet || photoSet || startEndTestPeriodDateSet || endEndTestPeriodDateSet || startEndContractDateSet || endEndContractDateSet || dayDurationSet || contractObservationsSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet || roleSet || categorySet || provinceSet || documentCategorySet || departmentSet || contractTypeSet || agreementSet;
    }

/* generated by stajanov (do not edit/delete) */

    private void customGetHQL(StringBuilder ret, int iArgNum) {
    }

    private boolean customIsSearchActive() {
        return false;
    }

    private void customToString(StringBuilder ret) {
    }

    private void customReset() {
    }

    private void customGetArguments(ArrayList ret) {
    }
}
