package com.autentia.intra.dao.search;

import com.autentia.intra.dao.SearchCriteria;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;


public class FinancialRatioSearch extends SearchCriteria {

/* generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;


        if (isTitleSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTitle() == null) {
                ret.append("title is NULL");
            } else {
                ret.append("title like :arg" + (iArgNum++));
            }
        }


        if (isStartRatioDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startRatioDate == null) {
                ret.append("ratioDate=:arg" + (iArgNum++));
            } else {
                ret.append("ratioDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndRatioDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endRatioDate == null) {
                ret.append("ratioDate=:arg" + (iArgNum++));
            } else {
                ret.append("ratioDate<=:arg" + (iArgNum++));
            }
        }


        if (isBanksAccountsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBanksAccounts() == null) {
                ret.append("banksAccounts is NULL");
            } else {
                ret.append("banksAccounts = :arg" + (iArgNum++));
            }
        }


        if (isCustomersSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCustomers() == null) {
                ret.append("customers is NULL");
            } else {
                ret.append("customers = :arg" + (iArgNum++));
            }
        }


        if (isStocksSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getStocks() == null) {
                ret.append("stocks is NULL");
            } else {
                ret.append("stocks = :arg" + (iArgNum++));
            }
        }


        if (isAmortizationsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAmortizations() == null) {
                ret.append("amortizations is NULL");
            } else {
                ret.append("amortizations = :arg" + (iArgNum++));
            }
        }


        if (isInfrastructuresSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getInfrastructures() == null) {
                ret.append("infrastructures is NULL");
            } else {
                ret.append("infrastructures = :arg" + (iArgNum++));
            }
        }


        if (isShortTermLiabilitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getShortTermLiability() == null) {
                ret.append("shortTermLiability is NULL");
            } else {
                ret.append("shortTermLiability = :arg" + (iArgNum++));
            }
        }


        if (isObligationBondSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getObligationBond() == null) {
                ret.append("obligationBond is NULL");
            } else {
                ret.append("obligationBond = :arg" + (iArgNum++));
            }
        }


        if (isCapitalSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCapital() == null) {
                ret.append("capital is NULL");
            } else {
                ret.append("capital = :arg" + (iArgNum++));
            }
        }


        if (isReservesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getReserves() == null) {
                ret.append("reserves is NULL");
            } else {
                ret.append("reserves = :arg" + (iArgNum++));
            }
        }


        if (isIncomesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getIncomes() == null) {
                ret.append("incomes is NULL");
            } else {
                ret.append("incomes = :arg" + (iArgNum++));
            }
        }


        if (isExpensesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getExpenses() == null) {
                ret.append("expenses is NULL");
            } else {
                ret.append("expenses = :arg" + (iArgNum++));
            }
        }


        if (isOtherExploitationExpensesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOtherExploitationExpenses() == null) {
                ret.append("otherExploitationExpenses is NULL");
            } else {
                ret.append("otherExploitationExpenses = :arg" + (iArgNum++));
            }
        }


        if (isFinancialExpensesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getFinancialExpenses() == null) {
                ret.append("financialExpenses is NULL");
            } else {
                ret.append("financialExpenses = :arg" + (iArgNum++));
            }
        }


        if (isTaxesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTaxes() == null) {
                ret.append("taxes is NULL");
            } else {
                ret.append("taxes = :arg" + (iArgNum++));
            }
        }


        if (isNetAssetSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getNetAsset() == null) {
                ret.append("netAsset is NULL");
            } else {
                ret.append("netAsset = :arg" + (iArgNum++));
            }
        }


        if (isTotalAssetSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalAsset() == null) {
                ret.append("totalAsset is NULL");
            } else {
                ret.append("totalAsset = :arg" + (iArgNum++));
            }
        }


        if (isTotalOtherResourcesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalOtherResources() == null) {
                ret.append("totalOtherResources is NULL");
            } else {
                ret.append("totalOtherResources = :arg" + (iArgNum++));
            }
        }


        if (isTotalOurResourcesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalOurResources() == null) {
                ret.append("totalOurResources is NULL");
            } else {
                ret.append("totalOurResources = :arg" + (iArgNum++));
            }
        }


        if (isTotalLiabilitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalLiability() == null) {
                ret.append("totalLiability is NULL");
            } else {
                ret.append("totalLiability = :arg" + (iArgNum++));
            }
        }


        if (isMarginSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getMargin() == null) {
                ret.append("margin is NULL");
            } else {
                ret.append("margin = :arg" + (iArgNum++));
            }
        }


        if (isBaitSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBait() == null) {
                ret.append("bait is NULL");
            } else {
                ret.append("bait = :arg" + (iArgNum++));
            }
        }


        if (isBatSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBat() == null) {
                ret.append("bat is NULL");
            } else {
                ret.append("bat = :arg" + (iArgNum++));
            }
        }


        if (isBdtSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBdt() == null) {
                ret.append("bdt is NULL");
            } else {
                ret.append("bdt = :arg" + (iArgNum++));
            }
        }


        if (isBaitdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBaitd() == null) {
                ret.append("baitd is NULL");
            } else {
                ret.append("baitd = :arg" + (iArgNum++));
            }
        }


        if (isLiquiditySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLiquidity() == null) {
                ret.append("liquidity is NULL");
            } else {
                ret.append("liquidity = :arg" + (iArgNum++));
            }
        }


        if (isExchequerSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getExchequer() == null) {
                ret.append("exchequer is NULL");
            } else {
                ret.append("exchequer = :arg" + (iArgNum++));
            }
        }


        if (isAvailabilitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAvailability() == null) {
                ret.append("availability is NULL");
            } else {
                ret.append("availability = :arg" + (iArgNum++));
            }
        }


        if (isExpensesCoverageSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getExpensesCoverage() == null) {
                ret.append("expensesCoverage is NULL");
            } else {
                ret.append("expensesCoverage = :arg" + (iArgNum++));
            }
        }


        if (isWorkingCapitalSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getWorkingCapital() == null) {
                ret.append("workingCapital is NULL");
            } else {
                ret.append("workingCapital = :arg" + (iArgNum++));
            }
        }


        if (isSolvencySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getSolvency() == null) {
                ret.append("solvency is NULL");
            } else {
                ret.append("solvency = :arg" + (iArgNum++));
            }
        }


        if (isDebtRatioSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDebtRatio() == null) {
                ret.append("debtRatio is NULL");
            } else {
                ret.append("debtRatio = :arg" + (iArgNum++));
            }
        }


        if (isDebtTotalLiabilitySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDebtTotalLiability() == null) {
                ret.append("debtTotalLiability is NULL");
            } else {
                ret.append("debtTotalLiability = :arg" + (iArgNum++));
            }
        }


        if (isGuaranteeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getGuarantee() == null) {
                ret.append("guarantee is NULL");
            } else {
                ret.append("guarantee = :arg" + (iArgNum++));
            }
        }


        if (isFinanceCoverageSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getFinanceCoverage() == null) {
                ret.append("financeCoverage is NULL");
            } else {
                ret.append("financeCoverage = :arg" + (iArgNum++));
            }
        }


        if (isCollectionPeriodSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCollectionPeriod() == null) {
                ret.append("collectionPeriod is NULL");
            } else {
                ret.append("collectionPeriod = :arg" + (iArgNum++));
            }
        }


        if (isPayPeriodSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPayPeriod() == null) {
                ret.append("payPeriod is NULL");
            } else {
                ret.append("payPeriod = :arg" + (iArgNum++));
            }
        }


        if (isTurnoverAssetSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTurnoverAsset() == null) {
                ret.append("turnoverAsset is NULL");
            } else {
                ret.append("turnoverAsset = :arg" + (iArgNum++));
            }
        }


        if (isTurnoverPermanentAssetSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTurnoverPermanentAsset() == null) {
                ret.append("turnoverPermanentAsset is NULL");
            } else {
                ret.append("turnoverPermanentAsset = :arg" + (iArgNum++));
            }
        }


        if (isTurnoverFMSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTurnoverFM() == null) {
                ret.append("turnoverFM is NULL");
            } else {
                ret.append("turnoverFM = :arg" + (iArgNum++));
            }
        }


        if (isGrossSpreadSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getGrossSpread() == null) {
                ret.append("grossSpread is NULL");
            } else {
                ret.append("grossSpread = :arg" + (iArgNum++));
            }
        }


        if (isBaitSpreadSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBaitSpread() == null) {
                ret.append("baitSpread is NULL");
            } else {
                ret.append("baitSpread = :arg" + (iArgNum++));
            }
        }


        if (isBdtSpreadSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBdtSpread() == null) {
                ret.append("bdtSpread is NULL");
            } else {
                ret.append("bdtSpread = :arg" + (iArgNum++));
            }
        }


        if (isBaitROASet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBaitROA() == null) {
                ret.append("baitROA is NULL");
            } else {
                ret.append("baitROA = :arg" + (iArgNum++));
            }
        }


        if (isBaitdROASet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBaitdROA() == null) {
                ret.append("baitdROA is NULL");
            } else {
                ret.append("baitdROA = :arg" + (iArgNum++));
            }
        }


        if (isROESet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getROE() == null) {
                ret.append("ROE is NULL");
            } else {
                ret.append("ROE = :arg" + (iArgNum++));
            }
        }


        if (isLeveragingSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLeveraging() == null) {
                ret.append("leveraging is NULL");
            } else {
                ret.append("leveraging = :arg" + (iArgNum++));
            }
        }


        if (isROCESet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getROCE() == null) {
                ret.append("ROCE is NULL");
            } else {
                ret.append("ROCE = :arg" + (iArgNum++));
            }
        }


        if (isOwnerIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOwnerId() == null) {
                ret.append("ownerId is NULL");
            } else {
                ret.append("ownerId = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartmentId() == null) {
                ret.append("departmentId is NULL");
            } else {
                ret.append("departmentId = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();


        if (isTitleSet() && getTitle() != null) {
            ret.add(title);
        }


        if (isStartRatioDateSet()) {
            ret.add(startRatioDate);
        }
        if (isEndRatioDateSet()) {
            ret.add(endRatioDate);
        }


        if (isBanksAccountsSet() && getBanksAccounts() != null) {
            ret.add(banksAccounts);
        }


        if (isCustomersSet() && getCustomers() != null) {
            ret.add(customers);
        }


        if (isStocksSet() && getStocks() != null) {
            ret.add(stocks);
        }


        if (isAmortizationsSet() && getAmortizations() != null) {
            ret.add(amortizations);
        }


        if (isInfrastructuresSet() && getInfrastructures() != null) {
            ret.add(infrastructures);
        }


        if (isShortTermLiabilitySet() && getShortTermLiability() != null) {
            ret.add(shortTermLiability);
        }


        if (isObligationBondSet() && getObligationBond() != null) {
            ret.add(obligationBond);
        }


        if (isCapitalSet() && getCapital() != null) {
            ret.add(capital);
        }


        if (isReservesSet() && getReserves() != null) {
            ret.add(reserves);
        }


        if (isIncomesSet() && getIncomes() != null) {
            ret.add(incomes);
        }


        if (isExpensesSet() && getExpenses() != null) {
            ret.add(expenses);
        }


        if (isOtherExploitationExpensesSet() && getOtherExploitationExpenses() != null) {
            ret.add(otherExploitationExpenses);
        }


        if (isFinancialExpensesSet() && getFinancialExpenses() != null) {
            ret.add(financialExpenses);
        }


        if (isTaxesSet() && getTaxes() != null) {
            ret.add(taxes);
        }


        if (isNetAssetSet() && getNetAsset() != null) {
            ret.add(netAsset);
        }


        if (isTotalAssetSet() && getTotalAsset() != null) {
            ret.add(totalAsset);
        }


        if (isTotalOtherResourcesSet() && getTotalOtherResources() != null) {
            ret.add(totalOtherResources);
        }


        if (isTotalOurResourcesSet() && getTotalOurResources() != null) {
            ret.add(totalOurResources);
        }


        if (isTotalLiabilitySet() && getTotalLiability() != null) {
            ret.add(totalLiability);
        }


        if (isMarginSet() && getMargin() != null) {
            ret.add(margin);
        }


        if (isBaitSet() && getBait() != null) {
            ret.add(bait);
        }


        if (isBatSet() && getBat() != null) {
            ret.add(bat);
        }


        if (isBdtSet() && getBdt() != null) {
            ret.add(bdt);
        }


        if (isBaitdSet() && getBaitd() != null) {
            ret.add(baitd);
        }


        if (isLiquiditySet() && getLiquidity() != null) {
            ret.add(liquidity);
        }


        if (isExchequerSet() && getExchequer() != null) {
            ret.add(exchequer);
        }


        if (isAvailabilitySet() && getAvailability() != null) {
            ret.add(availability);
        }


        if (isExpensesCoverageSet() && getExpensesCoverage() != null) {
            ret.add(expensesCoverage);
        }


        if (isWorkingCapitalSet() && getWorkingCapital() != null) {
            ret.add(workingCapital);
        }


        if (isSolvencySet() && getSolvency() != null) {
            ret.add(solvency);
        }


        if (isDebtRatioSet() && getDebtRatio() != null) {
            ret.add(debtRatio);
        }


        if (isDebtTotalLiabilitySet() && getDebtTotalLiability() != null) {
            ret.add(debtTotalLiability);
        }


        if (isGuaranteeSet() && getGuarantee() != null) {
            ret.add(guarantee);
        }


        if (isFinanceCoverageSet() && getFinanceCoverage() != null) {
            ret.add(financeCoverage);
        }


        if (isCollectionPeriodSet() && getCollectionPeriod() != null) {
            ret.add(collectionPeriod);
        }


        if (isPayPeriodSet() && getPayPeriod() != null) {
            ret.add(payPeriod);
        }


        if (isTurnoverAssetSet() && getTurnoverAsset() != null) {
            ret.add(turnoverAsset);
        }


        if (isTurnoverPermanentAssetSet() && getTurnoverPermanentAsset() != null) {
            ret.add(turnoverPermanentAsset);
        }


        if (isTurnoverFMSet() && getTurnoverFM() != null) {
            ret.add(turnoverFM);
        }


        if (isGrossSpreadSet() && getGrossSpread() != null) {
            ret.add(grossSpread);
        }


        if (isBaitSpreadSet() && getBaitSpread() != null) {
            ret.add(baitSpread);
        }


        if (isBdtSpreadSet() && getBdtSpread() != null) {
            ret.add(bdtSpread);
        }


        if (isBaitROASet() && getBaitROA() != null) {
            ret.add(baitROA);
        }


        if (isBaitdROASet() && getBaitdROA() != null) {
            ret.add(baitdROA);
        }


        if (isROESet() && getROE() != null) {
            ret.add(ROE);
        }


        if (isLeveragingSet() && getLeveraging() != null) {
            ret.add(leveraging);
        }


        if (isROCESet() && getROCE() != null) {
            ret.add(ROCE);
        }


        if (isOwnerIdSet() && getOwnerId() != null) {
            ret.add(ownerId);
        }


        if (isDepartmentIdSet() && getDepartmentId() != null) {
            ret.add(departmentId);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {


        unsetTitle();


        unsetStartRatioDate();
        unsetEndRatioDate();


        unsetBanksAccounts();


        unsetCustomers();


        unsetStocks();


        unsetAmortizations();


        unsetInfrastructures();


        unsetShortTermLiability();


        unsetObligationBond();


        unsetCapital();


        unsetReserves();


        unsetIncomes();


        unsetExpenses();


        unsetOtherExploitationExpenses();


        unsetFinancialExpenses();


        unsetTaxes();


        unsetNetAsset();


        unsetTotalAsset();


        unsetTotalOtherResources();


        unsetTotalOurResources();


        unsetTotalLiability();


        unsetMargin();


        unsetBait();


        unsetBat();


        unsetBdt();


        unsetBaitd();


        unsetLiquidity();


        unsetExchequer();


        unsetAvailability();


        unsetExpensesCoverage();


        unsetWorkingCapital();


        unsetSolvency();


        unsetDebtRatio();


        unsetDebtTotalLiability();


        unsetGuarantee();


        unsetFinanceCoverage();


        unsetCollectionPeriod();


        unsetPayPeriod();


        unsetTurnoverAsset();


        unsetTurnoverPermanentAsset();


        unsetTurnoverFM();


        unsetGrossSpread();


        unsetBaitSpread();


        unsetBdtSpread();


        unsetBaitROA();


        unsetBaitdROA();


        unsetROE();


        unsetLeveraging();


        unsetROCE();


        unsetOwnerId();


        unsetDepartmentId();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("FinancialRatioSearch{");


        if (isTitleSet()) {
            ret.append("(title");
            ret.append("=" + title);
            ret.append(")");
        }


        if (isStartRatioDateSet()) {
            ret.append("(startRatioDate");
            ret.append("=" + startRatioDate);
            ret.append(")");
        }
        if (isEndRatioDateSet()) {
            ret.append("(endRatioDate");
            ret.append("=" + endRatioDate);
            ret.append(")");
        }


        if (isBanksAccountsSet()) {
            ret.append("(banksAccounts");
            ret.append("=" + banksAccounts);
            ret.append(")");
        }


        if (isCustomersSet()) {
            ret.append("(customers");
            ret.append("=" + customers);
            ret.append(")");
        }


        if (isStocksSet()) {
            ret.append("(stocks");
            ret.append("=" + stocks);
            ret.append(")");
        }


        if (isAmortizationsSet()) {
            ret.append("(amortizations");
            ret.append("=" + amortizations);
            ret.append(")");
        }


        if (isInfrastructuresSet()) {
            ret.append("(infrastructures");
            ret.append("=" + infrastructures);
            ret.append(")");
        }


        if (isShortTermLiabilitySet()) {
            ret.append("(shortTermLiability");
            ret.append("=" + shortTermLiability);
            ret.append(")");
        }


        if (isObligationBondSet()) {
            ret.append("(obligationBond");
            ret.append("=" + obligationBond);
            ret.append(")");
        }


        if (isCapitalSet()) {
            ret.append("(capital");
            ret.append("=" + capital);
            ret.append(")");
        }


        if (isReservesSet()) {
            ret.append("(reserves");
            ret.append("=" + reserves);
            ret.append(")");
        }


        if (isIncomesSet()) {
            ret.append("(incomes");
            ret.append("=" + incomes);
            ret.append(")");
        }


        if (isExpensesSet()) {
            ret.append("(expenses");
            ret.append("=" + expenses);
            ret.append(")");
        }


        if (isOtherExploitationExpensesSet()) {
            ret.append("(otherExploitationExpenses");
            ret.append("=" + otherExploitationExpenses);
            ret.append(")");
        }


        if (isFinancialExpensesSet()) {
            ret.append("(financialExpenses");
            ret.append("=" + financialExpenses);
            ret.append(")");
        }


        if (isTaxesSet()) {
            ret.append("(taxes");
            ret.append("=" + taxes);
            ret.append(")");
        }


        if (isNetAssetSet()) {
            ret.append("(netAsset");
            ret.append("=" + netAsset);
            ret.append(")");
        }


        if (isTotalAssetSet()) {
            ret.append("(totalAsset");
            ret.append("=" + totalAsset);
            ret.append(")");
        }


        if (isTotalOtherResourcesSet()) {
            ret.append("(totalOtherResources");
            ret.append("=" + totalOtherResources);
            ret.append(")");
        }


        if (isTotalOurResourcesSet()) {
            ret.append("(totalOurResources");
            ret.append("=" + totalOurResources);
            ret.append(")");
        }


        if (isTotalLiabilitySet()) {
            ret.append("(totalLiability");
            ret.append("=" + totalLiability);
            ret.append(")");
        }


        if (isMarginSet()) {
            ret.append("(margin");
            ret.append("=" + margin);
            ret.append(")");
        }


        if (isBaitSet()) {
            ret.append("(bait");
            ret.append("=" + bait);
            ret.append(")");
        }


        if (isBatSet()) {
            ret.append("(bat");
            ret.append("=" + bat);
            ret.append(")");
        }


        if (isBdtSet()) {
            ret.append("(bdt");
            ret.append("=" + bdt);
            ret.append(")");
        }


        if (isBaitdSet()) {
            ret.append("(baitd");
            ret.append("=" + baitd);
            ret.append(")");
        }


        if (isLiquiditySet()) {
            ret.append("(liquidity");
            ret.append("=" + liquidity);
            ret.append(")");
        }


        if (isExchequerSet()) {
            ret.append("(exchequer");
            ret.append("=" + exchequer);
            ret.append(")");
        }


        if (isAvailabilitySet()) {
            ret.append("(availability");
            ret.append("=" + availability);
            ret.append(")");
        }


        if (isExpensesCoverageSet()) {
            ret.append("(expensesCoverage");
            ret.append("=" + expensesCoverage);
            ret.append(")");
        }


        if (isWorkingCapitalSet()) {
            ret.append("(workingCapital");
            ret.append("=" + workingCapital);
            ret.append(")");
        }


        if (isSolvencySet()) {
            ret.append("(solvency");
            ret.append("=" + solvency);
            ret.append(")");
        }


        if (isDebtRatioSet()) {
            ret.append("(debtRatio");
            ret.append("=" + debtRatio);
            ret.append(")");
        }


        if (isDebtTotalLiabilitySet()) {
            ret.append("(debtTotalLiability");
            ret.append("=" + debtTotalLiability);
            ret.append(")");
        }


        if (isGuaranteeSet()) {
            ret.append("(guarantee");
            ret.append("=" + guarantee);
            ret.append(")");
        }


        if (isFinanceCoverageSet()) {
            ret.append("(financeCoverage");
            ret.append("=" + financeCoverage);
            ret.append(")");
        }


        if (isCollectionPeriodSet()) {
            ret.append("(collectionPeriod");
            ret.append("=" + collectionPeriod);
            ret.append(")");
        }


        if (isPayPeriodSet()) {
            ret.append("(payPeriod");
            ret.append("=" + payPeriod);
            ret.append(")");
        }


        if (isTurnoverAssetSet()) {
            ret.append("(turnoverAsset");
            ret.append("=" + turnoverAsset);
            ret.append(")");
        }


        if (isTurnoverPermanentAssetSet()) {
            ret.append("(turnoverPermanentAsset");
            ret.append("=" + turnoverPermanentAsset);
            ret.append(")");
        }


        if (isTurnoverFMSet()) {
            ret.append("(turnoverFM");
            ret.append("=" + turnoverFM);
            ret.append(")");
        }


        if (isGrossSpreadSet()) {
            ret.append("(grossSpread");
            ret.append("=" + grossSpread);
            ret.append(")");
        }


        if (isBaitSpreadSet()) {
            ret.append("(baitSpread");
            ret.append("=" + baitSpread);
            ret.append(")");
        }


        if (isBdtSpreadSet()) {
            ret.append("(bdtSpread");
            ret.append("=" + bdtSpread);
            ret.append(")");
        }


        if (isBaitROASet()) {
            ret.append("(baitROA");
            ret.append("=" + baitROA);
            ret.append(")");
        }


        if (isBaitdROASet()) {
            ret.append("(baitdROA");
            ret.append("=" + baitdROA);
            ret.append(")");
        }


        if (isROESet()) {
            ret.append("(ROE");
            ret.append("=" + ROE);
            ret.append(")");
        }


        if (isLeveragingSet()) {
            ret.append("(leveraging");
            ret.append("=" + leveraging);
            ret.append(")");
        }


        if (isROCESet()) {
            ret.append("(ROCE");
            ret.append("=" + ROCE);
            ret.append(")");
        }


        if (isOwnerIdSet()) {
            ret.append("(ownerId");
            ret.append("=" + ownerId);
            ret.append(")");
        }


        if (isDepartmentIdSet()) {
            ret.append("(departmentId");
            ret.append("=" + departmentId);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }

        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isTitleSet() {
        return titleSet;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
        this.titleSet = true;
    }

    public void unsetTitle() {
        this.titleSet = false;
    }


    public boolean isStartRatioDateSet() {
        return startRatioDateSet;
    }

    public Date getStartRatioDate() {
        return startRatioDate;
    }

    public void setStartRatioDate(Date startRatioDate) {
        this.startRatioDate = startRatioDate;
        this.startRatioDateSet = true;
    }

    public void unsetStartRatioDate() {
        this.startRatioDateSet = false;
    }

    public boolean isEndRatioDateSet() {
        return endRatioDateSet;
    }

    public Date getEndRatioDate() {
        return endRatioDate;
    }

    public void setEndRatioDate(Date endRatioDate) {
        this.endRatioDate = endRatioDate;
        this.endRatioDateSet = true;
    }

    public void unsetEndRatioDate() {
        this.endRatioDateSet = false;
    }


    public boolean isBanksAccountsSet() {
        return banksAccountsSet;
    }

    public BigDecimal getBanksAccounts() {
        return banksAccounts;
    }

    public void setBanksAccounts(BigDecimal banksAccounts) {
        this.banksAccounts = banksAccounts;
        this.banksAccountsSet = true;
    }

    public void unsetBanksAccounts() {
        this.banksAccountsSet = false;
    }


    public boolean isCustomersSet() {
        return customersSet;
    }

    public BigDecimal getCustomers() {
        return customers;
    }

    public void setCustomers(BigDecimal customers) {
        this.customers = customers;
        this.customersSet = true;
    }

    public void unsetCustomers() {
        this.customersSet = false;
    }


    public boolean isStocksSet() {
        return stocksSet;
    }

    public BigDecimal getStocks() {
        return stocks;
    }

    public void setStocks(BigDecimal stocks) {
        this.stocks = stocks;
        this.stocksSet = true;
    }

    public void unsetStocks() {
        this.stocksSet = false;
    }


    public boolean isAmortizationsSet() {
        return amortizationsSet;
    }

    public BigDecimal getAmortizations() {
        return amortizations;
    }

    public void setAmortizations(BigDecimal amortizations) {
        this.amortizations = amortizations;
        this.amortizationsSet = true;
    }

    public void unsetAmortizations() {
        this.amortizationsSet = false;
    }


    public boolean isInfrastructuresSet() {
        return infrastructuresSet;
    }

    public BigDecimal getInfrastructures() {
        return infrastructures;
    }

    public void setInfrastructures(BigDecimal infrastructures) {
        this.infrastructures = infrastructures;
        this.infrastructuresSet = true;
    }

    public void unsetInfrastructures() {
        this.infrastructuresSet = false;
    }


    public boolean isShortTermLiabilitySet() {
        return shortTermLiabilitySet;
    }

    public BigDecimal getShortTermLiability() {
        return shortTermLiability;
    }

    public void setShortTermLiability(BigDecimal shortTermLiability) {
        this.shortTermLiability = shortTermLiability;
        this.shortTermLiabilitySet = true;
    }

    public void unsetShortTermLiability() {
        this.shortTermLiabilitySet = false;
    }


    public boolean isObligationBondSet() {
        return obligationBondSet;
    }

    public BigDecimal getObligationBond() {
        return obligationBond;
    }

    public void setObligationBond(BigDecimal obligationBond) {
        this.obligationBond = obligationBond;
        this.obligationBondSet = true;
    }

    public void unsetObligationBond() {
        this.obligationBondSet = false;
    }


    public boolean isCapitalSet() {
        return capitalSet;
    }

    public BigDecimal getCapital() {
        return capital;
    }

    public void setCapital(BigDecimal capital) {
        this.capital = capital;
        this.capitalSet = true;
    }

    public void unsetCapital() {
        this.capitalSet = false;
    }


    public boolean isReservesSet() {
        return reservesSet;
    }

    public BigDecimal getReserves() {
        return reserves;
    }

    public void setReserves(BigDecimal reserves) {
        this.reserves = reserves;
        this.reservesSet = true;
    }

    public void unsetReserves() {
        this.reservesSet = false;
    }


    public boolean isIncomesSet() {
        return incomesSet;
    }

    public BigDecimal getIncomes() {
        return incomes;
    }

    public void setIncomes(BigDecimal incomes) {
        this.incomes = incomes;
        this.incomesSet = true;
    }

    public void unsetIncomes() {
        this.incomesSet = false;
    }


    public boolean isExpensesSet() {
        return expensesSet;
    }

    public BigDecimal getExpenses() {
        return expenses;
    }

    public void setExpenses(BigDecimal expenses) {
        this.expenses = expenses;
        this.expensesSet = true;
    }

    public void unsetExpenses() {
        this.expensesSet = false;
    }


    public boolean isOtherExploitationExpensesSet() {
        return otherExploitationExpensesSet;
    }

    public BigDecimal getOtherExploitationExpenses() {
        return otherExploitationExpenses;
    }

    public void setOtherExploitationExpenses(BigDecimal otherExploitationExpenses) {
        this.otherExploitationExpenses = otherExploitationExpenses;
        this.otherExploitationExpensesSet = true;
    }

    public void unsetOtherExploitationExpenses() {
        this.otherExploitationExpensesSet = false;
    }


    public boolean isFinancialExpensesSet() {
        return financialExpensesSet;
    }

    public BigDecimal getFinancialExpenses() {
        return financialExpenses;
    }

    public void setFinancialExpenses(BigDecimal financialExpenses) {
        this.financialExpenses = financialExpenses;
        this.financialExpensesSet = true;
    }

    public void unsetFinancialExpenses() {
        this.financialExpensesSet = false;
    }


    public boolean isTaxesSet() {
        return taxesSet;
    }

    public BigDecimal getTaxes() {
        return taxes;
    }

    public void setTaxes(BigDecimal taxes) {
        this.taxes = taxes;
        this.taxesSet = true;
    }

    public void unsetTaxes() {
        this.taxesSet = false;
    }


    public boolean isNetAssetSet() {
        return netAssetSet;
    }

    public BigDecimal getNetAsset() {
        return netAsset;
    }

    public void setNetAsset(BigDecimal netAsset) {
        this.netAsset = netAsset;
        this.netAssetSet = true;
    }

    public void unsetNetAsset() {
        this.netAssetSet = false;
    }


    public boolean isTotalAssetSet() {
        return totalAssetSet;
    }

    public BigDecimal getTotalAsset() {
        return totalAsset;
    }

    public void setTotalAsset(BigDecimal totalAsset) {
        this.totalAsset = totalAsset;
        this.totalAssetSet = true;
    }

    public void unsetTotalAsset() {
        this.totalAssetSet = false;
    }


    public boolean isTotalOtherResourcesSet() {
        return totalOtherResourcesSet;
    }

    public BigDecimal getTotalOtherResources() {
        return totalOtherResources;
    }

    public void setTotalOtherResources(BigDecimal totalOtherResources) {
        this.totalOtherResources = totalOtherResources;
        this.totalOtherResourcesSet = true;
    }

    public void unsetTotalOtherResources() {
        this.totalOtherResourcesSet = false;
    }


    public boolean isTotalOurResourcesSet() {
        return totalOurResourcesSet;
    }

    public BigDecimal getTotalOurResources() {
        return totalOurResources;
    }

    public void setTotalOurResources(BigDecimal totalOurResources) {
        this.totalOurResources = totalOurResources;
        this.totalOurResourcesSet = true;
    }

    public void unsetTotalOurResources() {
        this.totalOurResourcesSet = false;
    }


    public boolean isTotalLiabilitySet() {
        return totalLiabilitySet;
    }

    public BigDecimal getTotalLiability() {
        return totalLiability;
    }

    public void setTotalLiability(BigDecimal totalLiability) {
        this.totalLiability = totalLiability;
        this.totalLiabilitySet = true;
    }

    public void unsetTotalLiability() {
        this.totalLiabilitySet = false;
    }


    public boolean isMarginSet() {
        return marginSet;
    }

    public BigDecimal getMargin() {
        return margin;
    }

    public void setMargin(BigDecimal margin) {
        this.margin = margin;
        this.marginSet = true;
    }

    public void unsetMargin() {
        this.marginSet = false;
    }


    public boolean isBaitSet() {
        return baitSet;
    }

    public BigDecimal getBait() {
        return bait;
    }

    public void setBait(BigDecimal bait) {
        this.bait = bait;
        this.baitSet = true;
    }

    public void unsetBait() {
        this.baitSet = false;
    }


    public boolean isBatSet() {
        return batSet;
    }

    public BigDecimal getBat() {
        return bat;
    }

    public void setBat(BigDecimal bat) {
        this.bat = bat;
        this.batSet = true;
    }

    public void unsetBat() {
        this.batSet = false;
    }


    public boolean isBdtSet() {
        return bdtSet;
    }

    public BigDecimal getBdt() {
        return bdt;
    }

    public void setBdt(BigDecimal bdt) {
        this.bdt = bdt;
        this.bdtSet = true;
    }

    public void unsetBdt() {
        this.bdtSet = false;
    }


    public boolean isBaitdSet() {
        return baitdSet;
    }

    public BigDecimal getBaitd() {
        return baitd;
    }

    public void setBaitd(BigDecimal baitd) {
        this.baitd = baitd;
        this.baitdSet = true;
    }

    public void unsetBaitd() {
        this.baitdSet = false;
    }


    public boolean isLiquiditySet() {
        return liquiditySet;
    }

    public BigDecimal getLiquidity() {
        return liquidity;
    }

    public void setLiquidity(BigDecimal liquidity) {
        this.liquidity = liquidity;
        this.liquiditySet = true;
    }

    public void unsetLiquidity() {
        this.liquiditySet = false;
    }


    public boolean isExchequerSet() {
        return exchequerSet;
    }

    public BigDecimal getExchequer() {
        return exchequer;
    }

    public void setExchequer(BigDecimal exchequer) {
        this.exchequer = exchequer;
        this.exchequerSet = true;
    }

    public void unsetExchequer() {
        this.exchequerSet = false;
    }


    public boolean isAvailabilitySet() {
        return availabilitySet;
    }

    public BigDecimal getAvailability() {
        return availability;
    }

    public void setAvailability(BigDecimal availability) {
        this.availability = availability;
        this.availabilitySet = true;
    }

    public void unsetAvailability() {
        this.availabilitySet = false;
    }


    public boolean isExpensesCoverageSet() {
        return expensesCoverageSet;
    }

    public BigDecimal getExpensesCoverage() {
        return expensesCoverage;
    }

    public void setExpensesCoverage(BigDecimal expensesCoverage) {
        this.expensesCoverage = expensesCoverage;
        this.expensesCoverageSet = true;
    }

    public void unsetExpensesCoverage() {
        this.expensesCoverageSet = false;
    }


    public boolean isWorkingCapitalSet() {
        return workingCapitalSet;
    }

    public BigDecimal getWorkingCapital() {
        return workingCapital;
    }

    public void setWorkingCapital(BigDecimal workingCapital) {
        this.workingCapital = workingCapital;
        this.workingCapitalSet = true;
    }

    public void unsetWorkingCapital() {
        this.workingCapitalSet = false;
    }


    public boolean isSolvencySet() {
        return solvencySet;
    }

    public BigDecimal getSolvency() {
        return solvency;
    }

    public void setSolvency(BigDecimal solvency) {
        this.solvency = solvency;
        this.solvencySet = true;
    }

    public void unsetSolvency() {
        this.solvencySet = false;
    }


    public boolean isDebtRatioSet() {
        return debtRatioSet;
    }

    public BigDecimal getDebtRatio() {
        return debtRatio;
    }

    public void setDebtRatio(BigDecimal debtRatio) {
        this.debtRatio = debtRatio;
        this.debtRatioSet = true;
    }

    public void unsetDebtRatio() {
        this.debtRatioSet = false;
    }


    public boolean isDebtTotalLiabilitySet() {
        return debtTotalLiabilitySet;
    }

    public BigDecimal getDebtTotalLiability() {
        return debtTotalLiability;
    }

    public void setDebtTotalLiability(BigDecimal debtTotalLiability) {
        this.debtTotalLiability = debtTotalLiability;
        this.debtTotalLiabilitySet = true;
    }

    public void unsetDebtTotalLiability() {
        this.debtTotalLiabilitySet = false;
    }


    public boolean isGuaranteeSet() {
        return guaranteeSet;
    }

    public BigDecimal getGuarantee() {
        return guarantee;
    }

    public void setGuarantee(BigDecimal guarantee) {
        this.guarantee = guarantee;
        this.guaranteeSet = true;
    }

    public void unsetGuarantee() {
        this.guaranteeSet = false;
    }


    public boolean isFinanceCoverageSet() {
        return financeCoverageSet;
    }

    public BigDecimal getFinanceCoverage() {
        return financeCoverage;
    }

    public void setFinanceCoverage(BigDecimal financeCoverage) {
        this.financeCoverage = financeCoverage;
        this.financeCoverageSet = true;
    }

    public void unsetFinanceCoverage() {
        this.financeCoverageSet = false;
    }


    public boolean isCollectionPeriodSet() {
        return collectionPeriodSet;
    }

    public BigDecimal getCollectionPeriod() {
        return collectionPeriod;
    }

    public void setCollectionPeriod(BigDecimal collectionPeriod) {
        this.collectionPeriod = collectionPeriod;
        this.collectionPeriodSet = true;
    }

    public void unsetCollectionPeriod() {
        this.collectionPeriodSet = false;
    }


    public boolean isPayPeriodSet() {
        return payPeriodSet;
    }

    public BigDecimal getPayPeriod() {
        return payPeriod;
    }

    public void setPayPeriod(BigDecimal payPeriod) {
        this.payPeriod = payPeriod;
        this.payPeriodSet = true;
    }

    public void unsetPayPeriod() {
        this.payPeriodSet = false;
    }


    public boolean isTurnoverAssetSet() {
        return turnoverAssetSet;
    }

    public BigDecimal getTurnoverAsset() {
        return turnoverAsset;
    }

    public void setTurnoverAsset(BigDecimal turnoverAsset) {
        this.turnoverAsset = turnoverAsset;
        this.turnoverAssetSet = true;
    }

    public void unsetTurnoverAsset() {
        this.turnoverAssetSet = false;
    }


    public boolean isTurnoverPermanentAssetSet() {
        return turnoverPermanentAssetSet;
    }

    public BigDecimal getTurnoverPermanentAsset() {
        return turnoverPermanentAsset;
    }

    public void setTurnoverPermanentAsset(BigDecimal turnoverPermanentAsset) {
        this.turnoverPermanentAsset = turnoverPermanentAsset;
        this.turnoverPermanentAssetSet = true;
    }

    public void unsetTurnoverPermanentAsset() {
        this.turnoverPermanentAssetSet = false;
    }


    public boolean isTurnoverFMSet() {
        return turnoverFMSet;
    }

    public BigDecimal getTurnoverFM() {
        return turnoverFM;
    }

    public void setTurnoverFM(BigDecimal turnoverFM) {
        this.turnoverFM = turnoverFM;
        this.turnoverFMSet = true;
    }

    public void unsetTurnoverFM() {
        this.turnoverFMSet = false;
    }


    public boolean isGrossSpreadSet() {
        return grossSpreadSet;
    }

    public BigDecimal getGrossSpread() {
        return grossSpread;
    }

    public void setGrossSpread(BigDecimal grossSpread) {
        this.grossSpread = grossSpread;
        this.grossSpreadSet = true;
    }

    public void unsetGrossSpread() {
        this.grossSpreadSet = false;
    }


    public boolean isBaitSpreadSet() {
        return baitSpreadSet;
    }

    public BigDecimal getBaitSpread() {
        return baitSpread;
    }

    public void setBaitSpread(BigDecimal baitSpread) {
        this.baitSpread = baitSpread;
        this.baitSpreadSet = true;
    }

    public void unsetBaitSpread() {
        this.baitSpreadSet = false;
    }


    public boolean isBdtSpreadSet() {
        return bdtSpreadSet;
    }

    public BigDecimal getBdtSpread() {
        return bdtSpread;
    }

    public void setBdtSpread(BigDecimal bdtSpread) {
        this.bdtSpread = bdtSpread;
        this.bdtSpreadSet = true;
    }

    public void unsetBdtSpread() {
        this.bdtSpreadSet = false;
    }


    public boolean isBaitROASet() {
        return baitROASet;
    }

    public BigDecimal getBaitROA() {
        return baitROA;
    }

    public void setBaitROA(BigDecimal baitROA) {
        this.baitROA = baitROA;
        this.baitROASet = true;
    }

    public void unsetBaitROA() {
        this.baitROASet = false;
    }


    public boolean isBaitdROASet() {
        return baitdROASet;
    }

    public BigDecimal getBaitdROA() {
        return baitdROA;
    }

    public void setBaitdROA(BigDecimal baitdROA) {
        this.baitdROA = baitdROA;
        this.baitdROASet = true;
    }

    public void unsetBaitdROA() {
        this.baitdROASet = false;
    }


    public boolean isROESet() {
        return ROESet;
    }

    public BigDecimal getROE() {
        return ROE;
    }

    public void setROE(BigDecimal ROE) {
        this.ROE = ROE;
        this.ROESet = true;
    }

    public void unsetROE() {
        this.ROESet = false;
    }


    public boolean isLeveragingSet() {
        return leveragingSet;
    }

    public BigDecimal getLeveraging() {
        return leveraging;
    }

    public void setLeveraging(BigDecimal leveraging) {
        this.leveraging = leveraging;
        this.leveragingSet = true;
    }

    public void unsetLeveraging() {
        this.leveragingSet = false;
    }


    public boolean isROCESet() {
        return ROCESet;
    }

    public BigDecimal getROCE() {
        return ROCE;
    }

    public void setROCE(BigDecimal ROCE) {
        this.ROCE = ROCE;
        this.ROCESet = true;
    }

    public void unsetROCE() {
        this.ROCESet = false;
    }


    public boolean isOwnerIdSet() {
        return ownerIdSet;
    }

    public Integer getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(Integer ownerId) {
        this.ownerId = ownerId;
        this.ownerIdSet = true;
    }

    public void unsetOwnerId() {
        this.ownerIdSet = false;
    }


    public boolean isDepartmentIdSet() {
        return departmentIdSet;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
        this.departmentIdSet = true;
    }

    public void unsetDepartmentId() {
        this.departmentIdSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }

    // Fields


    private boolean titleSet;
    private String title;


    private boolean startRatioDateSet;
    private Date startRatioDate;
    private boolean endRatioDateSet;
    private Date endRatioDate;


    private boolean banksAccountsSet;
    private BigDecimal banksAccounts;


    private boolean customersSet;
    private BigDecimal customers;


    private boolean stocksSet;
    private BigDecimal stocks;


    private boolean amortizationsSet;
    private BigDecimal amortizations;


    private boolean infrastructuresSet;
    private BigDecimal infrastructures;


    private boolean shortTermLiabilitySet;
    private BigDecimal shortTermLiability;


    private boolean obligationBondSet;
    private BigDecimal obligationBond;


    private boolean capitalSet;
    private BigDecimal capital;


    private boolean reservesSet;
    private BigDecimal reserves;


    private boolean incomesSet;
    private BigDecimal incomes;


    private boolean expensesSet;
    private BigDecimal expenses;


    private boolean otherExploitationExpensesSet;
    private BigDecimal otherExploitationExpenses;


    private boolean financialExpensesSet;
    private BigDecimal financialExpenses;


    private boolean taxesSet;
    private BigDecimal taxes;


    private boolean netAssetSet;
    private BigDecimal netAsset;


    private boolean totalAssetSet;
    private BigDecimal totalAsset;


    private boolean totalOtherResourcesSet;
    private BigDecimal totalOtherResources;


    private boolean totalOurResourcesSet;
    private BigDecimal totalOurResources;


    private boolean totalLiabilitySet;
    private BigDecimal totalLiability;


    private boolean marginSet;
    private BigDecimal margin;


    private boolean baitSet;
    private BigDecimal bait;


    private boolean batSet;
    private BigDecimal bat;


    private boolean bdtSet;
    private BigDecimal bdt;


    private boolean baitdSet;
    private BigDecimal baitd;


    private boolean liquiditySet;
    private BigDecimal liquidity;


    private boolean exchequerSet;
    private BigDecimal exchequer;


    private boolean availabilitySet;
    private BigDecimal availability;


    private boolean expensesCoverageSet;
    private BigDecimal expensesCoverage;


    private boolean workingCapitalSet;
    private BigDecimal workingCapital;


    private boolean solvencySet;
    private BigDecimal solvency;


    private boolean debtRatioSet;
    private BigDecimal debtRatio;


    private boolean debtTotalLiabilitySet;
    private BigDecimal debtTotalLiability;


    private boolean guaranteeSet;
    private BigDecimal guarantee;


    private boolean financeCoverageSet;
    private BigDecimal financeCoverage;


    private boolean collectionPeriodSet;
    private BigDecimal collectionPeriod;


    private boolean payPeriodSet;
    private BigDecimal payPeriod;


    private boolean turnoverAssetSet;
    private BigDecimal turnoverAsset;


    private boolean turnoverPermanentAssetSet;
    private BigDecimal turnoverPermanentAsset;


    private boolean turnoverFMSet;
    private BigDecimal turnoverFM;


    private boolean grossSpreadSet;
    private BigDecimal grossSpread;


    private boolean baitSpreadSet;
    private BigDecimal baitSpread;


    private boolean bdtSpreadSet;
    private BigDecimal bdtSpread;


    private boolean baitROASet;
    private BigDecimal baitROA;


    private boolean baitdROASet;
    private BigDecimal baitdROA;


    private boolean ROESet;
    private BigDecimal ROE;


    private boolean leveragingSet;
    private BigDecimal leveraging;


    private boolean ROCESet;
    private BigDecimal ROCE;


    private boolean ownerIdSet;
    private Integer ownerId;


    private boolean departmentIdSet;
    private Integer departmentId;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || titleSet || startRatioDateSet || endRatioDateSet || banksAccountsSet || customersSet || stocksSet || amortizationsSet || infrastructuresSet || shortTermLiabilitySet || obligationBondSet || capitalSet || reservesSet || incomesSet || expensesSet || otherExploitationExpensesSet || financialExpensesSet || taxesSet || netAssetSet || totalAssetSet || totalOtherResourcesSet || totalOurResourcesSet || totalLiabilitySet || marginSet || baitSet || batSet || bdtSet || baitdSet || liquiditySet || exchequerSet || availabilitySet || expensesCoverageSet || workingCapitalSet || solvencySet || debtRatioSet || debtTotalLiabilitySet || guaranteeSet || financeCoverageSet || collectionPeriodSet || payPeriodSet || turnoverAssetSet || turnoverPermanentAssetSet || turnoverFMSet || grossSpreadSet || baitSpreadSet || bdtSpreadSet || baitROASet || baitdROASet || ROESet || leveragingSet || ROCESet || ownerIdSet || departmentIdSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet;
    }

/* generated by stajanov (do not edit/delete) */

    private void customReset() {
        unsetDifferentId();

    }

    private void customToString(StringBuilder ret) {
        if (isDifferentIdSet()) {
            ret.append("(differentIdSet");
            ret.append("=" + differentIdSet);
            ret.append(")");
        }

    }

    private boolean customIsSearchActive() {
        // TODO Auto-generated method stub
        return false;
    }

    private void customGetHQL(StringBuilder ret, int iArgNum) {
        if (isDifferentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("id <> :arg" + (iArgNum++));
        }

    }

    private int differentId;
    private boolean differentIdSet;

    public void setDifferentId(int id) {
        this.differentId = id;
        this.differentIdSet = true;
    }

    public boolean isDifferentIdSet() {
        return differentIdSet;
    }

    public void unsetDifferentId() {
        this.differentIdSet = false;
    }

    private void customGetArguments(ArrayList<Object> ret) {
        if (isDifferentIdSet()) {
            ret.add(differentId);
        }

    }
}
