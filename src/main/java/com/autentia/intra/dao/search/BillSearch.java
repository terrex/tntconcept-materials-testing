package com.autentia.intra.dao.search;

import com.autentia.intra.businessobject.*;
import com.autentia.intra.dao.ITransferObject;
import com.autentia.intra.dao.SearchCriteria;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Class to search for Bill objects
 *
 * @author stajanov code generator
 */
public class BillSearch extends SearchCriteria {
/* generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;

        if (isStartCreationDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startCreationDate == null) {
                ret.append("creationDate=:arg" + (iArgNum++));
            } else {
                ret.append("creationDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndCreationDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endCreationDate == null) {
                ret.append("creationDate=:arg" + (iArgNum++));
            } else {
                ret.append("creationDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartStartBillDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startStartBillDate == null) {
                ret.append("startBillDate=:arg" + (iArgNum++));
            } else {
                ret.append("startBillDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndStartBillDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endStartBillDate == null) {
                ret.append("startBillDate=:arg" + (iArgNum++));
            } else {
                ret.append("startBillDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartEndBillDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startEndBillDate == null) {
                ret.append("endBillDate=:arg" + (iArgNum++));
            } else {
                ret.append("endBillDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndEndBillDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endEndBillDate == null) {
                ret.append("endBillDate=:arg" + (iArgNum++));
            } else {
                ret.append("endBillDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartExpirationSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startExpiration == null) {
                ret.append("expiration=:arg" + (iArgNum++));
            } else {
                ret.append("expiration>=:arg" + (iArgNum++));
            }
        }
        if (isEndExpirationSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endExpiration == null) {
                ret.append("expiration=:arg" + (iArgNum++));
            } else {
                ret.append("expiration<=:arg" + (iArgNum++));
            }
        }


        if (isPaymentModeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPaymentMode() == null) {
                ret.append("paymentMode is NULL");
            } else {
                ret.append("paymentMode = :arg" + (iArgNum++));
            }
        }


        if (isStateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getState() == null) {
                ret.append("state is NULL");
            } else {
                ret.append("state = :arg" + (iArgNum++));
            }
        }


        if (isNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getNumber() == null) {
                ret.append("number is NULL");
            } else {
                ret.append("number = :arg" + (iArgNum++));
            }
        }


        if (isNameSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getName() == null) {
                ret.append("name is NULL");
            } else {
                ret.append("name like :arg" + (iArgNum++));
            }
        }


        if (isFileSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getFile() == null) {
                ret.append("file is NULL");
            } else {
                ret.append("file = :arg" + (iArgNum++));
            }
        }


        if (isFileMimeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getFileMime() == null) {
                ret.append("fileMime is NULL");
            } else {
                ret.append("fileMime = :arg" + (iArgNum++));
            }
        }


        if (isObservationsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getObservations() == null) {
                ret.append("observations is NULL");
            } else {
                ret.append("observations = :arg" + (iArgNum++));
            }
        }


        if (isBillTypeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBillType() == null) {
                ret.append("billType is NULL");
            } else {
                ret.append("billType = :arg" + (iArgNum++));
            }
        }


        if (isOrderNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOrderNumber() == null) {
                ret.append("orderNumber is NULL");
            } else {
                ret.append("orderNumber = :arg" + (iArgNum++));
            }
        }


        if (isAmountSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAmount() == null) {
                ret.append("amount is NULL");
            } else {
                ret.append("amount = :arg" + (iArgNum++));
            }
        }


        if (isEntriesNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getEntriesNumber() == null) {
                ret.append("entriesNumber is NULL");
            } else {
                ret.append("entriesNumber = :arg" + (iArgNum++));
            }
        }


        if (isOwnerIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOwnerId() == null) {
                ret.append("ownerId is NULL");
            } else {
                ret.append("ownerId = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartmentId() == null) {
                ret.append("departmentId is NULL");
            } else {
                ret.append("departmentId = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }


        if (isProjectSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getProject() == null) {
                ret.append("project is NULL");
            } else {
                ret.append("project = :arg" + (iArgNum++));
            }
        }


        if (isContactSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getContact() == null) {
                ret.append("contact is NULL");
            } else {
                ret.append("contact = :arg" + (iArgNum++));
            }
        }


        if (isProviderSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getProvider() == null) {
                ret.append("provider is NULL");
            } else {
                ret.append("provider = :arg" + (iArgNum++));
            }
        }


        if (isClientSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getClient() == null) {
                ret.append("client is NULL");
            } else {
                ret.append("client = :arg" + (iArgNum++));
            }
        }


        if (isLineaTrabajoSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLineaTrabajo() == null) {
                ret.append("lineaTrabajo is NULL");
            } else {
                ret.append("lineaTrabajo = :arg" + (iArgNum++));
            }
        }


        if (isEntriesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("entries.id IN (:arg" + (iArgNum++) + ")");
        }


        if (isBreakDownSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("breakDown.id IN (:arg" + (iArgNum++) + ")");
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();

        if (isStartCreationDateSet()) {
            ret.add(startCreationDate);
        }
        if (isEndCreationDateSet()) {
            ret.add(endCreationDate);
        }


        if (isStartStartBillDateSet()) {
            ret.add(startStartBillDate);
        }
        if (isEndStartBillDateSet()) {
            ret.add(endStartBillDate);
        }


        if (isStartEndBillDateSet()) {
            ret.add(startEndBillDate);
        }
        if (isEndEndBillDateSet()) {
            ret.add(endEndBillDate);
        }


        if (isStartExpirationSet()) {
            ret.add(startExpiration);
        }
        if (isEndExpirationSet()) {
            ret.add(endExpiration);
        }


        if (isPaymentModeSet() && getPaymentMode() != null) {
            ret.add(paymentMode);
        }


        if (isStateSet() && getState() != null) {
            ret.add(state);
        }


        if (isNumberSet() && getNumber() != null) {
            ret.add(number);
        }


        if (isNameSet() && getName() != null) {
            ret.add(name);
        }


        if (isFileSet() && getFile() != null) {
            ret.add(file);
        }


        if (isFileMimeSet() && getFileMime() != null) {
            ret.add(fileMime);
        }


        if (isObservationsSet() && getObservations() != null) {
            ret.add(observations);
        }


        if (isBillTypeSet() && getBillType() != null) {
            ret.add(billType);
        }


        if (isOrderNumberSet() && getOrderNumber() != null) {
            ret.add(orderNumber);
        }


        if (isAmountSet() && getAmount() != null) {
            ret.add(amount);
        }


        if (isEntriesNumberSet() && getEntriesNumber() != null) {
            ret.add(entriesNumber);
        }


        if (isOwnerIdSet() && getOwnerId() != null) {
            ret.add(ownerId);
        }


        if (isDepartmentIdSet() && getDepartmentId() != null) {
            ret.add(departmentId);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }


        if (isProjectSet() && getProject() != null) {
            ret.add(project);
        }


        if (isContactSet() && getContact() != null) {
            ret.add(contact);
        }


        if (isProviderSet() && getProvider() != null) {
            ret.add(provider);
        }


        if (isClientSet() && getClient() != null) {
            ret.add(client);
        }


        if (isLineaTrabajoSet() && getLineaTrabajo() != null) {
            ret.add(lineaTrabajo);
        }


        if (isEntriesSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : entries) {
                params.add(to.getId());
            }
            ret.add(params);
        }


        if (isBreakDownSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : breakDown) {
                params.add(to.getId());
            }
            ret.add(params);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {

        unsetStartCreationDate();
        unsetEndCreationDate();


        unsetStartStartBillDate();
        unsetEndStartBillDate();


        unsetStartEndBillDate();
        unsetEndEndBillDate();


        unsetStartExpiration();
        unsetEndExpiration();


        unsetPaymentMode();


        unsetState();


        unsetNumber();


        unsetName();


        unsetFile();


        unsetFileMime();


        unsetObservations();


        unsetBillType();


        unsetOrderNumber();


        unsetAmount();


        unsetEntriesNumber();


        unsetOwnerId();


        unsetDepartmentId();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();


        unsetProject();


        unsetContact();


        unsetProvider();


        unsetClient();


        unsetLineaTrabajo();


        unsetEntries();


        unsetBreakDown();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("BillSearch{");


        if (isStartCreationDateSet()) {
            ret.append("(startCreationDate");
            ret.append("=" + startCreationDate);
            ret.append(")");
        }
        if (isEndCreationDateSet()) {
            ret.append("(endCreationDate");
            ret.append("=" + endCreationDate);
            ret.append(")");
        }


        if (isStartStartBillDateSet()) {
            ret.append("(startStartBillDate");
            ret.append("=" + startStartBillDate);
            ret.append(")");
        }
        if (isEndStartBillDateSet()) {
            ret.append("(endStartBillDate");
            ret.append("=" + endStartBillDate);
            ret.append(")");
        }


        if (isStartEndBillDateSet()) {
            ret.append("(startEndBillDate");
            ret.append("=" + startEndBillDate);
            ret.append(")");
        }
        if (isEndEndBillDateSet()) {
            ret.append("(endEndBillDate");
            ret.append("=" + endEndBillDate);
            ret.append(")");
        }


        if (isStartExpirationSet()) {
            ret.append("(startExpiration");
            ret.append("=" + startExpiration);
            ret.append(")");
        }
        if (isEndExpirationSet()) {
            ret.append("(endExpiration");
            ret.append("=" + endExpiration);
            ret.append(")");
        }


        if (isPaymentModeSet()) {
            ret.append("(paymentMode");
            ret.append("=" + paymentMode);
            ret.append(")");
        }


        if (isStateSet()) {
            ret.append("(state");
            ret.append("=" + state);
            ret.append(")");
        }


        if (isNumberSet()) {
            ret.append("(number");
            ret.append("=" + number);
            ret.append(")");
        }


        if (isNameSet()) {
            ret.append("(name");
            ret.append("=" + name);
            ret.append(")");
        }


        if (isFileSet()) {
            ret.append("(file");
            ret.append("=" + file);
            ret.append(")");
        }


        if (isFileMimeSet()) {
            ret.append("(fileMime");
            ret.append("=" + fileMime);
            ret.append(")");
        }


        if (isObservationsSet()) {
            ret.append("(observations");
            ret.append("=" + observations);
            ret.append(")");
        }


        if (isBillTypeSet()) {
            ret.append("(billType");
            ret.append("=" + billType);
            ret.append(")");
        }


        if (isOrderNumberSet()) {
            ret.append("(orderNumber");
            ret.append("=" + orderNumber);
            ret.append(")");
        }


        if (isAmountSet()) {
            ret.append("(amount");
            ret.append("=" + amount);
            ret.append(")");
        }


        if (isEntriesNumberSet()) {
            ret.append("(entriesNumber");
            ret.append("=" + entriesNumber);
            ret.append(")");
        }


        if (isOwnerIdSet()) {
            ret.append("(ownerId");
            ret.append("=" + ownerId);
            ret.append(")");
        }


        if (isDepartmentIdSet()) {
            ret.append("(departmentId");
            ret.append("=" + departmentId);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }


        if (isProjectSet()) {
            ret.append("(project");
            ret.append("=" + project);
            ret.append(")");
        }


        if (isContactSet()) {
            ret.append("(contact");
            ret.append("=" + contact);
            ret.append(")");
        }


        if (isProviderSet()) {
            ret.append("(provider");
            ret.append("=" + provider);
            ret.append(")");
        }


        if (isClientSet()) {
            ret.append("(client");
            ret.append("=" + client);
            ret.append(")");
        }


        if (isLineaTrabajoSet()) {
            ret.append("(lineaTrabajo");
            ret.append("=" + lineaTrabajo);
            ret.append(")");
        }


        if (isEntriesSet()) {
            ret.append("(entries={");
            for (Object o : entries.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        if (isBreakDownSet()) {
            ret.append("(breakDown={");
            for (Object o : breakDown.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isStartCreationDateSet() {
        return startCreationDateSet;
    }

    public Date getStartCreationDate() {
        return startCreationDate;
    }

    public void setStartCreationDate(Date startCreationDate) {
        this.startCreationDate = startCreationDate;
        this.startCreationDateSet = true;
    }

    public void unsetStartCreationDate() {
        this.startCreationDateSet = false;
    }

    public boolean isEndCreationDateSet() {
        return endCreationDateSet;
    }

    public Date getEndCreationDate() {
        return endCreationDate;
    }

    public void setEndCreationDate(Date endCreationDate) {
        this.endCreationDate = endCreationDate;
        this.endCreationDateSet = true;
    }

    public void unsetEndCreationDate() {
        this.endCreationDateSet = false;
    }


    public boolean isStartStartBillDateSet() {
        return startStartBillDateSet;
    }

    public Date getStartStartBillDate() {
        return startStartBillDate;
    }

    public void setStartStartBillDate(Date startStartBillDate) {
        this.startStartBillDate = startStartBillDate;
        this.startStartBillDateSet = true;
    }

    public void unsetStartStartBillDate() {
        this.startStartBillDateSet = false;
    }

    public boolean isEndStartBillDateSet() {
        return endStartBillDateSet;
    }

    public Date getEndStartBillDate() {
        return endStartBillDate;
    }

    public void setEndStartBillDate(Date endStartBillDate) {
        this.endStartBillDate = endStartBillDate;
        this.endStartBillDateSet = true;
    }

    public void unsetEndStartBillDate() {
        this.endStartBillDateSet = false;
    }


    public boolean isStartEndBillDateSet() {
        return startEndBillDateSet;
    }

    public Date getStartEndBillDate() {
        return startEndBillDate;
    }

    public void setStartEndBillDate(Date startEndBillDate) {
        this.startEndBillDate = startEndBillDate;
        this.startEndBillDateSet = true;
    }

    public void unsetStartEndBillDate() {
        this.startEndBillDateSet = false;
    }

    public boolean isEndEndBillDateSet() {
        return endEndBillDateSet;
    }

    public Date getEndEndBillDate() {
        return endEndBillDate;
    }

    public void setEndEndBillDate(Date endEndBillDate) {
        this.endEndBillDate = endEndBillDate;
        this.endEndBillDateSet = true;
    }

    public void unsetEndEndBillDate() {
        this.endEndBillDateSet = false;
    }


    public boolean isStartExpirationSet() {
        return startExpirationSet;
    }

    public Integer getStartExpiration() {
        return startExpiration;
    }

    public void setStartExpiration(Integer startExpiration) {
        this.startExpiration = startExpiration;
        this.startExpirationSet = true;
    }

    public void unsetStartExpiration() {
        this.startExpirationSet = false;
    }

    public boolean isEndExpirationSet() {
        return endExpirationSet;
    }

    public Integer getEndExpiration() {
        return endExpiration;
    }

    public void setEndExpiration(Integer endExpiration) {
        this.endExpiration = endExpiration;
        this.endExpirationSet = true;
    }

    public void unsetEndExpiration() {
        this.endExpirationSet = false;
    }


    public boolean isPaymentModeSet() {
        return paymentModeSet;
    }

    public BillPaymentMode getPaymentMode() {
        return paymentMode;
    }

    public void setPaymentMode(BillPaymentMode paymentMode) {
        this.paymentMode = paymentMode;
        this.paymentModeSet = true;
    }

    public void unsetPaymentMode() {
        this.paymentModeSet = false;
    }


    public boolean isStateSet() {
        return stateSet;
    }

    public BillState getState() {
        return state;
    }

    public void setState(BillState state) {
        this.state = state;
        this.stateSet = true;
    }

    public void unsetState() {
        this.stateSet = false;
    }


    public boolean isNumberSet() {
        return numberSet;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
        this.numberSet = true;
    }

    public void unsetNumber() {
        this.numberSet = false;
    }


    public boolean isNameSet() {
        return nameSet;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
        this.nameSet = true;
    }

    public void unsetName() {
        this.nameSet = false;
    }


    public boolean isFileSet() {
        return fileSet;
    }

    public String getFile() {
        return file;
    }

    public void setFile(String file) {
        this.file = file;
        this.fileSet = true;
    }

    public void unsetFile() {
        this.fileSet = false;
    }


    public boolean isFileMimeSet() {
        return fileMimeSet;
    }

    public String getFileMime() {
        return fileMime;
    }

    public void setFileMime(String fileMime) {
        this.fileMime = fileMime;
        this.fileMimeSet = true;
    }

    public void unsetFileMime() {
        this.fileMimeSet = false;
    }


    public boolean isObservationsSet() {
        return observationsSet;
    }

    public String getObservations() {
        return observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
        this.observationsSet = true;
    }

    public void unsetObservations() {
        this.observationsSet = false;
    }


    public boolean isBillTypeSet() {
        return billTypeSet;
    }

    public BillType getBillType() {
        return billType;
    }

    public void setBillType(BillType billType) {
        this.billType = billType;
        this.billTypeSet = true;
    }

    public void unsetBillType() {
        this.billTypeSet = false;
    }


    public boolean isOrderNumberSet() {
        return orderNumberSet;
    }

    public String getOrderNumber() {
        return orderNumber;
    }

    public void setOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        this.orderNumberSet = true;
    }

    public void unsetOrderNumber() {
        this.orderNumberSet = false;
    }


    public boolean isAmountSet() {
        return amountSet;
    }

    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
        this.amountSet = true;
    }

    public void unsetAmount() {
        this.amountSet = false;
    }


    public boolean isEntriesNumberSet() {
        return entriesNumberSet;
    }

    public Integer getEntriesNumber() {
        return entriesNumber;
    }

    public void setEntriesNumber(Integer entriesNumber) {
        this.entriesNumber = entriesNumber;
        this.entriesNumberSet = true;
    }

    public void unsetEntriesNumber() {
        this.entriesNumberSet = false;
    }


    public boolean isOwnerIdSet() {
        return ownerIdSet;
    }

    public Integer getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(Integer ownerId) {
        this.ownerId = ownerId;
        this.ownerIdSet = true;
    }

    public void unsetOwnerId() {
        this.ownerIdSet = false;
    }


    public boolean isDepartmentIdSet() {
        return departmentIdSet;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
        this.departmentIdSet = true;
    }

    public void unsetDepartmentId() {
        this.departmentIdSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }


    public boolean isProjectSet() {
        return projectSet;
    }

    public Project getProject() {
        return project;
    }

    public void setProject(Project project) {
        this.project = project;
        this.projectSet = true;
    }

    public void unsetProject() {
        this.projectSet = false;
    }


    public boolean isContactSet() {
        return contactSet;
    }

    public Contact getContact() {
        return contact;
    }

    public void setContact(Contact contact) {
        this.contact = contact;
        this.contactSet = true;
    }

    public void unsetContact() {
        this.contactSet = false;
    }


    public boolean isProviderSet() {
        return providerSet;
    }

    public Organization getProvider() {
        return provider;
    }

    public void setProvider(Organization provider) {
        this.provider = provider;
        this.providerSet = true;
    }

    public void unsetProvider() {
        this.providerSet = false;
    }


    public boolean isClientSet() {
        return clientSet;
    }

    public Organization getClient() {
        return client;
    }

    public void setClient(Organization client) {
        this.client = client;
        this.clientSet = true;
    }

    public void unsetClient() {
        this.clientSet = false;
    }


    public boolean isLineaTrabajoSet() {
        return lineaTrabajoSet;
    }

    public Department getLineaTrabajo() {
        return lineaTrabajo;
    }

    public void setLineaTrabajo(Department lineaTrabajo) {
        this.lineaTrabajo = lineaTrabajo;
        this.lineaTrabajoSet = true;
    }

    public void unsetLineaTrabajo() {
        this.lineaTrabajoSet = false;
    }


    public boolean isEntriesSet() {
        return entriesSet;
    }

    public List<AccountEntry> getEntries() {
        return entries;
    }

    public void setEntries(List<AccountEntry> entries) {
        this.entries = entries;
        this.entriesSet = true;
    }

    public void unsetEntries() {
        this.entriesSet = false;
    }


    public boolean isBreakDownSet() {
        return breakDownSet;
    }

    public List<BillBreakDown> getBreakDown() {
        return breakDown;
    }

    public void setBreakDown(List<BillBreakDown> breakDown) {
        this.breakDown = breakDown;
        this.breakDownSet = true;
    }

    public void unsetBreakDown() {
        this.breakDownSet = false;
    }

    // Fields

    private boolean startCreationDateSet;
    private Date startCreationDate;
    private boolean endCreationDateSet;
    private Date endCreationDate;


    private boolean startStartBillDateSet;
    private Date startStartBillDate;
    private boolean endStartBillDateSet;
    private Date endStartBillDate;


    private boolean startEndBillDateSet;
    private Date startEndBillDate;
    private boolean endEndBillDateSet;
    private Date endEndBillDate;


    private boolean startExpirationSet;
    private Integer startExpiration;
    private boolean endExpirationSet;
    private Integer endExpiration;


    private boolean paymentModeSet;
    private BillPaymentMode paymentMode;


    private boolean stateSet;
    private BillState state;


    private boolean numberSet;
    private String number;


    private boolean nameSet;
    private String name;


    private boolean fileSet;
    private String file;


    private boolean fileMimeSet;
    private String fileMime;


    private boolean observationsSet;
    private String observations;


    private boolean billTypeSet;
    private BillType billType;


    private boolean orderNumberSet;
    private String orderNumber;


    private boolean amountSet;
    private BigDecimal amount;


    private boolean entriesNumberSet;
    private Integer entriesNumber;


    private boolean ownerIdSet;
    private Integer ownerId;


    private boolean departmentIdSet;
    private Integer departmentId;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    private boolean projectSet;
    private Project project;


    private boolean contactSet;
    private Contact contact;


    private boolean providerSet;
    private Organization provider;


    private boolean clientSet;
    private Organization client;


    private boolean lineaTrabajoSet;
    private Department lineaTrabajo;


    private boolean entriesSet;
    private List<AccountEntry> entries;


    private boolean breakDownSet;
    private List<BillBreakDown> breakDown;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || startCreationDateSet || endCreationDateSet || startStartBillDateSet || endStartBillDateSet || startEndBillDateSet || endEndBillDateSet || startExpirationSet || endExpirationSet || paymentModeSet || stateSet || numberSet || nameSet || fileSet || fileMimeSet || observationsSet || billTypeSet || orderNumberSet || amountSet || entriesNumberSet || ownerIdSet || departmentIdSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet || projectSet || contactSet || providerSet || clientSet || lineaTrabajoSet || entriesSet || breakDownSet;
    }

    /* generated by stajanov (do not edit/delete) */
    /*
       @Override
       public String getHQL() {
           StringBuilder ret = new StringBuilder();
           int iArgNum = 0;

               if( isStartCreationDateSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               if( startCreationDate == null ){
                   ret.append( "creationDate=:arg"+(iArgNum++) );
               } else {
                   ret.append( "creationDate>=:arg"+(iArgNum++) );
               }
           }
           if( isEndCreationDateSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               if( endCreationDate == null ){
                   ret.append( "creationDate=:arg"+(iArgNum++) );
               } else {
                   ret.append( "creationDate<=:arg"+(iArgNum++) );
               }
           }

           if( isStartStartBillDateSet() ){
                   ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                   if( startStartBillDate == null ){
                       ret.append( "startBillDate=:arg"+(iArgNum++) );
                   } else {
                       ret.append( "startBillDate>=:arg"+(iArgNum++) );
                   }
               }
               if( isEndStartBillDateSet() ){
                   ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                   if( endStartBillDate == null ){
                       ret.append( "startBillDate=:arg"+(iArgNum++) );
                   } else {
                       ret.append( "startBillDate<=:arg"+(iArgNum++) );
                   }
               }


                   if( isStartEndBillDateSet() ){
                   ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                   if( startEndBillDate == null ){
                       ret.append( "endBillDate=:arg"+(iArgNum++) );
                   } else {
                       ret.append( "endBillDate>=:arg"+(iArgNum++) );
                   }
               }
               if( isEndEndBillDateSet() ){
                   ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                   if( endEndBillDate == null ){
                       ret.append( "endBillDate=:arg"+(iArgNum++) );
                   } else {
                       ret.append( "endBillDate<=:arg"+(iArgNum++) );
                   }
               }

               if( isStartExpirationSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               if( startExpiration == null ){
                   ret.append( "expiration=:arg"+(iArgNum++) );
               } else {
                   ret.append( "expiration>=:arg"+(iArgNum++) );
               }
           }
           if( isEndExpirationSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               if( endExpiration == null ){
                   ret.append( "expiration=:arg"+(iArgNum++) );
               } else {
                   ret.append( "expiration<=:arg"+(iArgNum++) );
               }
           }




           if( isPaymentModeSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "paymentMode = :arg"+(iArgNum++) );
           }




           if( isStateSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "state = :arg"+(iArgNum++) );
           }




           if( isNumberSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "number = :arg"+(iArgNum++) );
           }




           if( isNameSet() ){
                   ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                   ret.append( "name like :arg"+(iArgNum++) );
               }




           if( isFileSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "file = :arg"+(iArgNum++) );
           }




           if( isFileMimeSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "fileMime = :arg"+(iArgNum++) );
           }




           if( isObservationsSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "observations = :arg"+(iArgNum++) );
           }



           if( isProjectSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "project = :arg"+(iArgNum++) );
           }


               if( isEntriesSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "entries.id IN (:arg"+(iArgNum++)+")" );
           }


               if( isBreakDownSet() ){
               ret.append( (ret.length()==0) ? "WHERE " : " AND " );
               ret.append( "breakDown.id IN (:arg"+(iArgNum++)+")" );
           }

               if( isBillTypeSet() ){
                       ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                       ret.append( "billType = :arg"+(iArgNum++) );
                   }




                   if( isOrderNumberSet() ){
                       ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                       ret.append( "orderNumber = :arg"+(iArgNum++) );
                   }

                   if( isContactSet() ){
                       ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                       ret.append( "contact = :arg"+(iArgNum++) );
                   }

                   if( isProviderSet() ){
                           ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                           ret.append( "provider = :arg"+(iArgNum++) );
                       }

                   if(year!=AccountEntryBean.ALL_YEARS) {
                        ret.append( (ret.length()==0) ? "WHERE " : " AND " );
                        ret.append( "year(creationDate)="+year);
                   }

                       return ret.toString();
       }


    */
    private int year;
    private boolean yearSet;

    public void setYear(int year) {
        this.year = year;
        this.yearSet = true;
    }

    public int getYear() {
        return year;
    }

    public boolean isYearSet() {
        return yearSet;
    }

    public void unsetYear() {
        this.yearSet = false;
    }

    private void customGetHQL(StringBuilder ret, int iArgNum) {
        if (isYearSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("year(creationDate) = :arg" + (iArgNum++));
        }
    }

    private void customGetArguments(ArrayList ret) {
        if (isYearSet()) {
            ret.add(year);
        }
    }

    private void customReset() {
        unsetYear();
    }

    private void customToString(StringBuilder ret) {
        if (isYearSet()) {
            ret.append("(year");
            ret.append("=" + year);
            ret.append(")");
        }
    }

    private boolean customIsSearchActive() {
        return yearSet;
    }
}
