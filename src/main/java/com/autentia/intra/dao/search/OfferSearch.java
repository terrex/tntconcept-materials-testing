/* 
 *  TNTConcept Easy Enterprise Management by Autentia Real Bussiness Solution S.L.  
 *	Copyright (C) 2007 Autentia Real Bussiness Solution S.L.					   
 *	
 * 	This program is free software; you can redistribute it and/or
 * 	modify it under the terms of the GNU General Public License
 * 	as published by the Free Software Foundation; either version 2
 * 	of the License, or (at your option) any later version.
 *
 * 	This program is distributed in the hope that it will be useful,
 * 	but WITHOUT ANY WARRANTY; without even the implied warranty of
 * 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * 	GNU General Public License for more details.
 *
 * 	You should have received a copy of the GNU General Public License
 * 	along with this program; if not, write to the Free Software
 * 	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * 	Autentia Real Bussiness Solution S.L.
 * 	Tlf: +34 91 675 33 06, +34 655 99 11 72
 * 	Fax: +34 91 656 65 04
 * 	info@autentia.com																
 */


package com.autentia.intra.dao.search;

import com.autentia.intra.businessobject.*;
import com.autentia.intra.dao.ITransferObject;
import com.autentia.intra.dao.SearchCriteria;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;


public class OfferSearch extends SearchCriteria {


    private void customGetArguments(ArrayList<Object> ret) {
        // TODO Auto-generated method stub

    }

    private void customGetHQL(StringBuilder ret, int argNum) {
        // TODO Auto-generated method stub

    }

    private void customToString(StringBuilder ret) {
        // TODO Auto-generated method stub

    }

/* Offer - generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;


        if (isNumberSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getNumber() == null) {
                ret.append("number is NULL");
            } else {
                ret.append("number = :arg" + (iArgNum++));
            }
        }


        if (isTitleSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTitle() == null) {
                ret.append("title is NULL");
            } else {
                ret.append("title like :arg" + (iArgNum++));
            }
        }


        if (isDescriptionSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDescription() == null) {
                ret.append("description is NULL");
            } else {
                ret.append("description = :arg" + (iArgNum++));
            }
        }


        if (isObservationsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getObservations() == null) {
                ret.append("observations is NULL");
            } else {
                ret.append("observations = :arg" + (iArgNum++));
            }
        }


        if (isStartCreationDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startCreationDate == null) {
                ret.append("creationDate=:arg" + (iArgNum++));
            } else {
                ret.append("creationDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndCreationDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endCreationDate == null) {
                ret.append("creationDate=:arg" + (iArgNum++));
            } else {
                ret.append("creationDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartValidityDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startValidityDate == null) {
                ret.append("validityDate=:arg" + (iArgNum++));
            } else {
                ret.append("validityDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndValidityDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endValidityDate == null) {
                ret.append("validityDate=:arg" + (iArgNum++));
            } else {
                ret.append("validityDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartMaturityDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startMaturityDate == null) {
                ret.append("maturityDate=:arg" + (iArgNum++));
            } else {
                ret.append("maturityDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndMaturityDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endMaturityDate == null) {
                ret.append("maturityDate=:arg" + (iArgNum++));
            } else {
                ret.append("maturityDate<=:arg" + (iArgNum++));
            }
        }


        if (isOfferStateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOfferState() == null) {
                ret.append("offerState is NULL");
            } else {
                ret.append("offerState = :arg" + (iArgNum++));
            }
        }


        if (isOfferPotentialSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOfferPotential() == null) {
                ret.append("offerPotential is NULL");
            } else {
                ret.append("offerPotential = :arg" + (iArgNum++));
            }
        }


        if (isTotalRolesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalRoles() == null) {
                ret.append("totalRoles is NULL");
            } else {
                ret.append("totalRoles = :arg" + (iArgNum++));
            }
        }


        if (isTotalEnsayosSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalEnsayos() == null) {
                ret.append("totalEnsayos is NULL");
            } else {
                ret.append("totalEnsayos = :arg" + (iArgNum++));
            }
        }


        if (isTotalCostsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotalCosts() == null) {
                ret.append("totalCosts is NULL");
            } else {
                ret.append("totalCosts = :arg" + (iArgNum++));
            }
        }


        if (isTotalSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getTotal() == null) {
                ret.append("total is NULL");
            } else {
                ret.append("total = :arg" + (iArgNum++));
            }
        }


        if (isOwnerIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOwnerId() == null) {
                ret.append("ownerId is NULL");
            } else {
                ret.append("ownerId = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartmentId() == null) {
                ret.append("departmentId is NULL");
            } else {
                ret.append("departmentId = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }


        if (isUserSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getUser() == null) {
                ret.append("user is NULL");
            } else {
                ret.append("user = :arg" + (iArgNum++));
            }
        }


        if (isOrganizationSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOrganization() == null) {
                ret.append("organization is NULL");
            } else {
                ret.append("organization = :arg" + (iArgNum++));
            }
        }


        if (isLineaTrabajoSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getLineaTrabajo() == null) {
                ret.append("lineaTrabajo is NULL");
            } else {
                ret.append("lineaTrabajo = :arg" + (iArgNum++));
            }
        }


        if (isBillSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getBill() == null) {
                ret.append("bill is NULL");
            } else {
                ret.append("bill = :arg" + (iArgNum++));
            }
        }


        if (isContactSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getContact() == null) {
                ret.append("contact is NULL");
            } else {
                ret.append("contact = :arg" + (iArgNum++));
            }
        }


        if (isOfferRejectReasonSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOfferRejectReason() == null) {
                ret.append("offerRejectReason is NULL");
            } else {
                ret.append("offerRejectReason = :arg" + (iArgNum++));
            }
        }


        if (isInteractionsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("interactions.id IN (:arg" + (iArgNum++) + ")");
        }


        if (isRolesSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("roles.id IN (:arg" + (iArgNum++) + ")");
        }


        if (isEnsayosSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("ensayos.id IN (:arg" + (iArgNum++) + ")");
        }


        if (isCostsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("costs.id IN (:arg" + (iArgNum++) + ")");
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();


        if (isNumberSet() && getNumber() != null) {
            ret.add(number);
        }


        if (isTitleSet() && getTitle() != null) {
            ret.add(title);
        }


        if (isDescriptionSet() && getDescription() != null) {
            ret.add(description);
        }


        if (isObservationsSet() && getObservations() != null) {
            ret.add(observations);
        }


        if (isStartCreationDateSet()) {
            ret.add(startCreationDate);
        }
        if (isEndCreationDateSet()) {
            ret.add(endCreationDate);
        }


        if (isStartValidityDateSet()) {
            ret.add(startValidityDate);
        }
        if (isEndValidityDateSet()) {
            ret.add(endValidityDate);
        }


        if (isStartMaturityDateSet()) {
            ret.add(startMaturityDate);
        }
        if (isEndMaturityDateSet()) {
            ret.add(endMaturityDate);
        }


        if (isOfferStateSet() && getOfferState() != null) {
            ret.add(offerState);
        }


        if (isOfferPotentialSet() && getOfferPotential() != null) {
            ret.add(offerPotential);
        }


        if (isTotalRolesSet() && getTotalRoles() != null) {
            ret.add(totalRoles);
        }


        if (isTotalEnsayosSet() && getTotalEnsayos() != null) {
            ret.add(totalEnsayos);
        }


        if (isTotalCostsSet() && getTotalCosts() != null) {
            ret.add(totalCosts);
        }


        if (isTotalSet() && getTotal() != null) {
            ret.add(total);
        }


        if (isOwnerIdSet() && getOwnerId() != null) {
            ret.add(ownerId);
        }


        if (isDepartmentIdSet() && getDepartmentId() != null) {
            ret.add(departmentId);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }


        if (isUserSet() && getUser() != null) {
            ret.add(user);
        }


        if (isOrganizationSet() && getOrganization() != null) {
            ret.add(organization);
        }


        if (isLineaTrabajoSet() && getLineaTrabajo() != null) {
            ret.add(lineaTrabajo);
        }


        if (isBillSet() && getBill() != null) {
            ret.add(bill);
        }


        if (isContactSet() && getContact() != null) {
            ret.add(contact);
        }


        if (isOfferRejectReasonSet() && getOfferRejectReason() != null) {
            ret.add(offerRejectReason);
        }


        if (isInteractionsSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : interactions) {
                params.add(to.getId());
            }
            ret.add(params);
        }


        if (isRolesSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : roles) {
                params.add(to.getId());
            }
            ret.add(params);
        }


        if (isEnsayosSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : ensayos) {
                params.add(to.getId());
            }
            ret.add(params);
        }


        if (isCostsSet()) {
            List<Integer> params = new ArrayList<Integer>();
            for (ITransferObject to : costs) {
                params.add(to.getId());
            }
            ret.add(params);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {


        unsetNumber();


        unsetTitle();


        unsetDescription();


        unsetObservations();


        unsetStartCreationDate();
        unsetEndCreationDate();


        unsetStartValidityDate();
        unsetEndValidityDate();


        unsetStartMaturityDate();
        unsetEndMaturityDate();


        unsetOfferState();


        unsetOfferPotential();


        unsetTotalRoles();


        unsetTotalEnsayos();


        unsetTotalCosts();


        unsetTotal();


        unsetOwnerId();


        unsetDepartmentId();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();


        unsetUser();


        unsetOrganization();


        unsetLineaTrabajo();


        unsetBill();


        unsetContact();


        unsetOfferRejectReason();


        unsetInteractions();


        unsetRoles();


        unsetEnsayos();


        unsetCosts();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("OfferSearch{");


        if (isNumberSet()) {
            ret.append("(number");
            ret.append("=" + number);
            ret.append(")");
        }


        if (isTitleSet()) {
            ret.append("(title");
            ret.append("=" + title);
            ret.append(")");
        }


        if (isDescriptionSet()) {
            ret.append("(description");
            ret.append("=" + description);
            ret.append(")");
        }


        if (isObservationsSet()) {
            ret.append("(observations");
            ret.append("=" + observations);
            ret.append(")");
        }


        if (isStartCreationDateSet()) {
            ret.append("(startCreationDate");
            ret.append("=" + startCreationDate);
            ret.append(")");
        }
        if (isEndCreationDateSet()) {
            ret.append("(endCreationDate");
            ret.append("=" + endCreationDate);
            ret.append(")");
        }


        if (isStartValidityDateSet()) {
            ret.append("(startValidityDate");
            ret.append("=" + startValidityDate);
            ret.append(")");
        }
        if (isEndValidityDateSet()) {
            ret.append("(endValidityDate");
            ret.append("=" + endValidityDate);
            ret.append(")");
        }


        if (isStartMaturityDateSet()) {
            ret.append("(startMaturityDate");
            ret.append("=" + startMaturityDate);
            ret.append(")");
        }
        if (isEndMaturityDateSet()) {
            ret.append("(endMaturityDate");
            ret.append("=" + endMaturityDate);
            ret.append(")");
        }


        if (isOfferStateSet()) {
            ret.append("(offerState");
            ret.append("=" + offerState);
            ret.append(")");
        }


        if (isOfferPotentialSet()) {
            ret.append("(offerPotential");
            ret.append("=" + offerPotential);
            ret.append(")");
        }


        if (isTotalRolesSet()) {
            ret.append("(totalRoles");
            ret.append("=" + totalRoles);
            ret.append(")");
        }


        if (isTotalEnsayosSet()) {
            ret.append("(totalEnsayos");
            ret.append("=" + totalEnsayos);
            ret.append(")");
        }


        if (isTotalCostsSet()) {
            ret.append("(totalCosts");
            ret.append("=" + totalCosts);
            ret.append(")");
        }


        if (isTotalSet()) {
            ret.append("(total");
            ret.append("=" + total);
            ret.append(")");
        }


        if (isOwnerIdSet()) {
            ret.append("(ownerId");
            ret.append("=" + ownerId);
            ret.append(")");
        }


        if (isDepartmentIdSet()) {
            ret.append("(departmentId");
            ret.append("=" + departmentId);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }


        if (isUserSet()) {
            ret.append("(user");
            ret.append("=" + user);
            ret.append(")");
        }


        if (isOrganizationSet()) {
            ret.append("(organization");
            ret.append("=" + organization);
            ret.append(")");
        }


        if (isLineaTrabajoSet()) {
            ret.append("(lineaTrabajo");
            ret.append("=" + lineaTrabajo);
            ret.append(")");
        }


        if (isBillSet()) {
            ret.append("(bill");
            ret.append("=" + bill);
            ret.append(")");
        }


        if (isContactSet()) {
            ret.append("(contact");
            ret.append("=" + contact);
            ret.append(")");
        }


        if (isOfferRejectReasonSet()) {
            ret.append("(offerRejectReason");
            ret.append("=" + offerRejectReason);
            ret.append(")");
        }


        if (isInteractionsSet()) {
            ret.append("(interactions={");
            for (Object o : interactions.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        if (isRolesSet()) {
            ret.append("(roles={");
            for (Object o : roles.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        if (isEnsayosSet()) {
            ret.append("(ensayos={");
            for (Object o : ensayos.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        if (isCostsSet()) {
            ret.append("(costs={");
            for (Object o : costs.toArray()) {
                ret.append("," + o);
            }
            ret.append("})");
        }


        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isNumberSet() {
        return numberSet;
    }

    public String getNumber() {
        return number;
    }

    public void setNumber(String number) {
        this.number = number;
        this.numberSet = true;
    }

    public void unsetNumber() {
        this.numberSet = false;
    }


    public boolean isTitleSet() {
        return titleSet;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
        this.titleSet = true;
    }

    public void unsetTitle() {
        this.titleSet = false;
    }


    public boolean isDescriptionSet() {
        return descriptionSet;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
        this.descriptionSet = true;
    }

    public void unsetDescription() {
        this.descriptionSet = false;
    }


    public boolean isObservationsSet() {
        return observationsSet;
    }

    public String getObservations() {
        return observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
        this.observationsSet = true;
    }

    public void unsetObservations() {
        this.observationsSet = false;
    }


    public boolean isStartCreationDateSet() {
        return startCreationDateSet;
    }

    public Date getStartCreationDate() {
        return startCreationDate;
    }

    public void setStartCreationDate(Date startCreationDate) {
        this.startCreationDate = startCreationDate;
        this.startCreationDateSet = true;
    }

    public void unsetStartCreationDate() {
        this.startCreationDateSet = false;
    }

    public boolean isEndCreationDateSet() {
        return endCreationDateSet;
    }

    public Date getEndCreationDate() {
        return endCreationDate;
    }

    public void setEndCreationDate(Date endCreationDate) {
        this.endCreationDate = endCreationDate;
        this.endCreationDateSet = true;
    }

    public void unsetEndCreationDate() {
        this.endCreationDateSet = false;
    }


    public boolean isStartValidityDateSet() {
        return startValidityDateSet;
    }

    public Date getStartValidityDate() {
        return startValidityDate;
    }

    public void setStartValidityDate(Date startValidityDate) {
        this.startValidityDate = startValidityDate;
        this.startValidityDateSet = true;
    }

    public void unsetStartValidityDate() {
        this.startValidityDateSet = false;
    }

    public boolean isEndValidityDateSet() {
        return endValidityDateSet;
    }

    public Date getEndValidityDate() {
        return endValidityDate;
    }

    public void setEndValidityDate(Date endValidityDate) {
        this.endValidityDate = endValidityDate;
        this.endValidityDateSet = true;
    }

    public void unsetEndValidityDate() {
        this.endValidityDateSet = false;
    }


    public boolean isStartMaturityDateSet() {
        return startMaturityDateSet;
    }

    public Date getStartMaturityDate() {
        return startMaturityDate;
    }

    public void setStartMaturityDate(Date startMaturityDate) {
        this.startMaturityDate = startMaturityDate;
        this.startMaturityDateSet = true;
    }

    public void unsetStartMaturityDate() {
        this.startMaturityDateSet = false;
    }

    public boolean isEndMaturityDateSet() {
        return endMaturityDateSet;
    }

    public Date getEndMaturityDate() {
        return endMaturityDate;
    }

    public void setEndMaturityDate(Date endMaturityDate) {
        this.endMaturityDate = endMaturityDate;
        this.endMaturityDateSet = true;
    }

    public void unsetEndMaturityDate() {
        this.endMaturityDateSet = false;
    }


    public boolean isOfferStateSet() {
        return offerStateSet;
    }

    public OfferState getOfferState() {
        return offerState;
    }

    public void setOfferState(OfferState offerState) {
        this.offerState = offerState;
        this.offerStateSet = true;
    }

    public void unsetOfferState() {
        this.offerStateSet = false;
    }


    public boolean isOfferPotentialSet() {
        return offerPotentialSet;
    }

    public OfferPotential getOfferPotential() {
        return offerPotential;
    }

    public void setOfferPotential(OfferPotential offerPotential) {
        this.offerPotential = offerPotential;
        this.offerPotentialSet = true;
    }

    public void unsetOfferPotential() {
        this.offerPotentialSet = false;
    }


    public boolean isTotalRolesSet() {
        return totalRolesSet;
    }

    public BigDecimal getTotalRoles() {
        return totalRoles;
    }

    public void setTotalRoles(BigDecimal totalRoles) {
        this.totalRoles = totalRoles;
        this.totalRolesSet = true;
    }

    public void unsetTotalRoles() {
        this.totalRolesSet = false;
    }


    public boolean isTotalEnsayosSet() {
        return totalEnsayosSet;
    }

    public BigDecimal getTotalEnsayos() {
        return totalEnsayos;
    }

    public void setTotalEnsayos(BigDecimal totalEnsayos) {
        this.totalEnsayos = totalEnsayos;
        this.totalEnsayosSet = true;
    }

    public void unsetTotalEnsayos() {
        this.totalEnsayosSet = false;
    }


    public boolean isTotalCostsSet() {
        return totalCostsSet;
    }

    public BigDecimal getTotalCosts() {
        return totalCosts;
    }

    public void setTotalCosts(BigDecimal totalCosts) {
        this.totalCosts = totalCosts;
        this.totalCostsSet = true;
    }

    public void unsetTotalCosts() {
        this.totalCostsSet = false;
    }


    public boolean isTotalSet() {
        return totalSet;
    }

    public BigDecimal getTotal() {
        return total;
    }

    public void setTotal(BigDecimal total) {
        this.total = total;
        this.totalSet = true;
    }

    public void unsetTotal() {
        this.totalSet = false;
    }


    public boolean isOwnerIdSet() {
        return ownerIdSet;
    }

    public Integer getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(Integer ownerId) {
        this.ownerId = ownerId;
        this.ownerIdSet = true;
    }

    public void unsetOwnerId() {
        this.ownerIdSet = false;
    }


    public boolean isDepartmentIdSet() {
        return departmentIdSet;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
        this.departmentIdSet = true;
    }

    public void unsetDepartmentId() {
        this.departmentIdSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }


    public boolean isUserSet() {
        return userSet;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
        this.userSet = true;
    }

    public void unsetUser() {
        this.userSet = false;
    }


    public boolean isOrganizationSet() {
        return organizationSet;
    }

    public Organization getOrganization() {
        return organization;
    }

    public void setOrganization(Organization organization) {
        this.organization = organization;
        this.organizationSet = true;
    }

    public void unsetOrganization() {
        this.organizationSet = false;
    }


    public boolean isLineaTrabajoSet() {
        return lineaTrabajoSet;
    }

    public Department getLineaTrabajo() {
        return lineaTrabajo;
    }

    public void setLineaTrabajo(Department lineaTrabajo) {
        this.lineaTrabajo = lineaTrabajo;
        this.lineaTrabajoSet = true;
    }

    public void unsetLineaTrabajo() {
        this.lineaTrabajoSet = false;
    }


    public boolean isBillSet() {
        return billSet;
    }

    public Bill getBill() {
        return bill;
    }

    public void setBill(Bill bill) {
        this.bill = bill;
        this.billSet = true;
    }

    public void unsetBill() {
        this.billSet = false;
    }


    public boolean isContactSet() {
        return contactSet;
    }

    public Contact getContact() {
        return contact;
    }

    public void setContact(Contact contact) {
        this.contact = contact;
        this.contactSet = true;
    }

    public void unsetContact() {
        this.contactSet = false;
    }


    public boolean isOfferRejectReasonSet() {
        return offerRejectReasonSet;
    }

    public OfferRejectReason getOfferRejectReason() {
        return offerRejectReason;
    }

    public void setOfferRejectReason(OfferRejectReason offerRejectReason) {
        this.offerRejectReason = offerRejectReason;
        this.offerRejectReasonSet = true;
    }

    public void unsetOfferRejectReason() {
        this.offerRejectReasonSet = false;
    }


    public boolean isInteractionsSet() {
        return interactionsSet;
    }

    public List<Interaction> getInteractions() {
        return interactions;
    }

    public void setInteractions(List<Interaction> interactions) {
        this.interactions = interactions;
        this.interactionsSet = true;
    }

    public void unsetInteractions() {
        this.interactionsSet = false;
    }


    public boolean isRolesSet() {
        return rolesSet;
    }

    public List<OfferRole> getRoles() {
        return roles;
    }

    public void setRoles(List<OfferRole> roles) {
        this.roles = roles;
        this.rolesSet = true;
    }

    public void unsetRoles() {
        this.rolesSet = false;
    }


    public boolean isEnsayosSet() {
        return ensayosSet;
    }

    public List<OfferEnsayo> getEnsayos() {
        return ensayos;
    }

    public void setEnsayos(List<OfferEnsayo> ensayos) {
        this.ensayos = ensayos;
        this.ensayosSet = true;
    }

    public void unsetEnsayos() {
        this.ensayosSet = false;
    }


    public boolean isCostsSet() {
        return costsSet;
    }

    public List<OfferCost> getCosts() {
        return costs;
    }

    public void setCosts(List<OfferCost> costs) {
        this.costs = costs;
        this.costsSet = true;
    }

    public void unsetCosts() {
        this.costsSet = false;
    }

    // Fields


    private boolean numberSet;
    private String number;


    private boolean titleSet;
    private String title;


    private boolean descriptionSet;
    private String description;


    private boolean observationsSet;
    private String observations;


    private boolean startCreationDateSet;
    private Date startCreationDate;
    private boolean endCreationDateSet;
    private Date endCreationDate;


    private boolean startValidityDateSet;
    private Date startValidityDate;
    private boolean endValidityDateSet;
    private Date endValidityDate;


    private boolean startMaturityDateSet;
    private Date startMaturityDate;
    private boolean endMaturityDateSet;
    private Date endMaturityDate;


    private boolean offerStateSet;
    private OfferState offerState;


    private boolean offerPotentialSet;
    private OfferPotential offerPotential;


    private boolean totalRolesSet;
    private BigDecimal totalRoles;


    private boolean totalEnsayosSet;
    private BigDecimal totalEnsayos;


    private boolean totalCostsSet;
    private BigDecimal totalCosts;


    private boolean totalSet;
    private BigDecimal total;


    private boolean ownerIdSet;
    private Integer ownerId;


    private boolean departmentIdSet;
    private Integer departmentId;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    private boolean userSet;
    private User user;


    private boolean organizationSet;
    private Organization organization;


    private boolean lineaTrabajoSet;
    private Department lineaTrabajo;


    private boolean billSet;
    private Bill bill;


    private boolean contactSet;
    private Contact contact;


    private boolean offerRejectReasonSet;
    private OfferRejectReason offerRejectReason;


    private boolean interactionsSet;
    private List<Interaction> interactions;


    private boolean rolesSet;
    private List<OfferRole> roles;


    private boolean ensayosSet;
    private List<OfferEnsayo> ensayos;


    private boolean costsSet;
    private List<OfferCost> costs;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || numberSet || titleSet || descriptionSet || observationsSet || startCreationDateSet || endCreationDateSet || startValidityDateSet || endValidityDateSet || startMaturityDateSet || endMaturityDateSet || offerStateSet || offerPotentialSet || totalRolesSet || totalEnsayosSet || totalCostsSet || totalSet || ownerIdSet || departmentIdSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet || userSet || organizationSet || lineaTrabajoSet || billSet || contactSet || offerRejectReasonSet || interactionsSet || rolesSet || ensayosSet || costsSet;
    }


    /* Offer - generated by stajanov (do not edit/delete) */
    private boolean customIsSearchActive() {
        return false;
    }

    private void customReset() {
        // TODO Auto-generated method stub

    }

}
