package com.autentia.intra.dao.search;

import com.autentia.intra.businessobject.DocumentCategory;
import com.autentia.intra.dao.SearchCriteria;

import java.util.ArrayList;
import java.util.Date;

/**
 * Class to search for DocumentCategory objects
 *
 * @author stajanov code generator
 */
public class DocumentCategorySearch extends SearchCriteria {
/* generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;


        if (isNameSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getName() == null) {
                ret.append("name is NULL");
            } else {
                ret.append("name like :arg" + (iArgNum++));
            }
        }


        if (isDescriptionSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDescription() == null) {
                ret.append("description is NULL");
            } else {
                ret.append("description = :arg" + (iArgNum++));
            }
        }


        if (isCodeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getCode() == null) {
                ret.append("code is NULL");
            } else {
                ret.append("code = :arg" + (iArgNum++));
            }
        }


        if (isStartDocumentsLastUpdateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startDocumentsLastUpdate == null) {
                ret.append("documentsLastUpdate=:arg" + (iArgNum++));
            } else {
                ret.append("documentsLastUpdate>=:arg" + (iArgNum++));
            }
        }
        if (isEndDocumentsLastUpdateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endDocumentsLastUpdate == null) {
                ret.append("documentsLastUpdate=:arg" + (iArgNum++));
            } else {
                ret.append("documentsLastUpdate<=:arg" + (iArgNum++));
            }
        }


        if (isOwnerIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOwnerId() == null) {
                ret.append("ownerId is NULL");
            } else {
                ret.append("ownerId = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartmentId() == null) {
                ret.append("departmentId is NULL");
            } else {
                ret.append("departmentId = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }


        if (isPadreSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getPadre() == null) {
                ret.append("padre is NULL");
            } else {
                ret.append("padre = :arg" + (iArgNum++));
            }
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();

        if (isNameSet() && getName() != null) {
            ret.add(name);
        }


        if (isDescriptionSet() && getDescription() != null) {
            ret.add(description);
        }


        if (isCodeSet() && getCode() != null) {
            ret.add(code);
        }


        if (isStartDocumentsLastUpdateSet()) {
            ret.add(startDocumentsLastUpdate);
        }
        if (isEndDocumentsLastUpdateSet()) {
            ret.add(endDocumentsLastUpdate);
        }


        if (isOwnerIdSet() && getOwnerId() != null) {
            ret.add(ownerId);
        }


        if (isDepartmentIdSet() && getDepartmentId() != null) {
            ret.add(departmentId);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }


        if (isPadreSet() && getPadre() != null) {
            ret.add(padre);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {

        unsetName();


        unsetDescription();


        unsetCode();


        unsetStartDocumentsLastUpdate();
        unsetEndDocumentsLastUpdate();


        unsetOwnerId();


        unsetDepartmentId();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();


        unsetPadre();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("DocumentCategorySearch{");


        if (isNameSet()) {
            ret.append("(name");
            ret.append("=" + name);
            ret.append(")");
        }


        if (isDescriptionSet()) {
            ret.append("(description");
            ret.append("=" + description);
            ret.append(")");
        }


        if (isCodeSet()) {
            ret.append("(code");
            ret.append("=" + code);
            ret.append(")");
        }


        if (isStartDocumentsLastUpdateSet()) {
            ret.append("(startDocumentsLastUpdate");
            ret.append("=" + startDocumentsLastUpdate);
            ret.append(")");
        }
        if (isEndDocumentsLastUpdateSet()) {
            ret.append("(endDocumentsLastUpdate");
            ret.append("=" + endDocumentsLastUpdate);
            ret.append(")");
        }


        if (isOwnerIdSet()) {
            ret.append("(ownerId");
            ret.append("=" + ownerId);
            ret.append(")");
        }


        if (isDepartmentIdSet()) {
            ret.append("(departmentId");
            ret.append("=" + departmentId);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }


        if (isPadreSet()) {
            ret.append("(padre");
            ret.append("=" + padre);
            ret.append(")");
        }


        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isNameSet() {
        return nameSet;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
        this.nameSet = true;
    }

    public void unsetName() {
        this.nameSet = false;
    }


    public boolean isDescriptionSet() {
        return descriptionSet;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
        this.descriptionSet = true;
    }

    public void unsetDescription() {
        this.descriptionSet = false;
    }


    public boolean isCodeSet() {
        return codeSet;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
        this.codeSet = true;
    }

    public void unsetCode() {
        this.codeSet = false;
    }


    public boolean isStartDocumentsLastUpdateSet() {
        return startDocumentsLastUpdateSet;
    }

    public Date getStartDocumentsLastUpdate() {
        return startDocumentsLastUpdate;
    }

    public void setStartDocumentsLastUpdate(Date startDocumentsLastUpdate) {
        this.startDocumentsLastUpdate = startDocumentsLastUpdate;
        this.startDocumentsLastUpdateSet = true;
    }

    public void unsetStartDocumentsLastUpdate() {
        this.startDocumentsLastUpdateSet = false;
    }

    public boolean isEndDocumentsLastUpdateSet() {
        return endDocumentsLastUpdateSet;
    }

    public Date getEndDocumentsLastUpdate() {
        return endDocumentsLastUpdate;
    }

    public void setEndDocumentsLastUpdate(Date endDocumentsLastUpdate) {
        this.endDocumentsLastUpdate = endDocumentsLastUpdate;
        this.endDocumentsLastUpdateSet = true;
    }

    public void unsetEndDocumentsLastUpdate() {
        this.endDocumentsLastUpdateSet = false;
    }


    public boolean isOwnerIdSet() {
        return ownerIdSet;
    }

    public Integer getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(Integer ownerId) {
        this.ownerId = ownerId;
        this.ownerIdSet = true;
    }

    public void unsetOwnerId() {
        this.ownerIdSet = false;
    }


    public boolean isDepartmentIdSet() {
        return departmentIdSet;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
        this.departmentIdSet = true;
    }

    public void unsetDepartmentId() {
        this.departmentIdSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }


    public boolean isPadreSet() {
        return padreSet;
    }

    public DocumentCategory getPadre() {
        return padre;
    }

    public void setPadre(DocumentCategory padre) {
        this.padre = padre;
        this.padreSet = true;
    }

    public void unsetPadre() {
        this.padreSet = false;
    }

    // Fields

    private boolean nameSet;
    private String name;


    private boolean descriptionSet;
    private String description;


    private boolean codeSet;
    private String code;


    private boolean startDocumentsLastUpdateSet;
    private Date startDocumentsLastUpdate;
    private boolean endDocumentsLastUpdateSet;
    private Date endDocumentsLastUpdate;


    private boolean ownerIdSet;
    private Integer ownerId;


    private boolean departmentIdSet;
    private Integer departmentId;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    private boolean padreSet;
    private DocumentCategory padre;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || nameSet || descriptionSet || codeSet || startDocumentsLastUpdateSet || endDocumentsLastUpdateSet || ownerIdSet || departmentIdSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet || padreSet;
    }

    /* generated by stajanov (do not edit/delete) */
    private int differentId;
    private boolean differentIdSet;

    public boolean isDifferentIdSet() {
        return differentIdSet;
    }


    public void setDifferentId(int id) {
        this.differentId = id;
        this.differentIdSet = true;
    }

    public int getDifferentId() {
        return differentId;
    }

    public void unsetDifferentId() {
        this.differentIdSet = false;
    }

    private void customGetHQL(StringBuilder ret, int iArgNum) {
        if (isDifferentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            ret.append("id <> arg" + (iArgNum++));
        }
    }

    private void customGetArguments(ArrayList ret) {
        if (isDifferentIdSet()) {
            ret.add(differentId);
        }
    }

    private void customReset() {
        unsetDifferentId();
    }

    private void customToString(StringBuilder ret) {
        if (isDifferentIdSet()) {
            ret.append("(differentId");
            ret.append("=" + differentId);
            ret.append(")");
        }
    }

    private boolean customIsSearchActive() {
        return differentIdSet;
    }

}
