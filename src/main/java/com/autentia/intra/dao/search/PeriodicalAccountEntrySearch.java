package com.autentia.intra.dao.search;

import com.autentia.intra.businessobject.Account;
import com.autentia.intra.businessobject.AccountEntryType;
import com.autentia.intra.businessobject.Frequency;
import com.autentia.intra.dao.SearchCriteria;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;

/**
 * Class to search for PeriodicalAccountEntry objects
 *
 * @author stajanov code generator
 */
public class PeriodicalAccountEntrySearch extends SearchCriteria {
/* generated by stajanov (do not edit/delete) */


    @Override
    public String getHQL() {
        StringBuilder ret = new StringBuilder();
        int iArgNum = 0;


        if (isConceptSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getConcept() == null) {
                ret.append("concept is NULL");
            } else {
                ret.append("concept like :arg" + (iArgNum++));
            }
        }


        if (isStartDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startDate == null) {
                ret.append("date=:arg" + (iArgNum++));
            } else {
                ret.append("date>=:arg" + (iArgNum++));
            }
        }
        if (isEndDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endDate == null) {
                ret.append("date=:arg" + (iArgNum++));
            } else {
                ret.append("date<=:arg" + (iArgNum++));
            }
        }


        if (isStartAmountSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startAmount == null) {
                ret.append("amount=:arg" + (iArgNum++));
            } else {
                ret.append("amount>=:arg" + (iArgNum++));
            }
        }
        if (isEndAmountSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endAmount == null) {
                ret.append("amount=:arg" + (iArgNum++));
            } else {
                ret.append("amount<=:arg" + (iArgNum++));
            }
        }


        if (isStartRiseSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startRise == null) {
                ret.append("rise=:arg" + (iArgNum++));
            } else {
                ret.append("rise>=:arg" + (iArgNum++));
            }
        }
        if (isEndRiseSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endRise == null) {
                ret.append("rise=:arg" + (iArgNum++));
            } else {
                ret.append("rise<=:arg" + (iArgNum++));
            }
        }


        if (isObservationsSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getObservations() == null) {
                ret.append("observations is NULL");
            } else {
                ret.append("observations = :arg" + (iArgNum++));
            }
        }


        if (isOwnerIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getOwnerId() == null) {
                ret.append("ownerId is NULL");
            } else {
                ret.append("ownerId = :arg" + (iArgNum++));
            }
        }


        if (isDepartmentIdSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getDepartmentId() == null) {
                ret.append("departmentId is NULL");
            } else {
                ret.append("departmentId = :arg" + (iArgNum++));
            }
        }


        if (isStartInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndInsertDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endInsertDate == null) {
                ret.append("insertDate=:arg" + (iArgNum++));
            } else {
                ret.append("insertDate<=:arg" + (iArgNum++));
            }
        }


        if (isStartUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (startUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate>=:arg" + (iArgNum++));
            }
        }
        if (isEndUpdateDateSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (endUpdateDate == null) {
                ret.append("updateDate=:arg" + (iArgNum++));
            } else {
                ret.append("updateDate<=:arg" + (iArgNum++));
            }
        }


        if (isAccountSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getAccount() == null) {
                ret.append("account is NULL");
            } else {
                ret.append("account = :arg" + (iArgNum++));
            }
        }


        if (isTypeSet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getType() == null) {
                ret.append("type is NULL");
            } else {
                ret.append("type = :arg" + (iArgNum++));
            }
        }


        if (isFrequencySet()) {
            ret.append((ret.length() == 0) ? "WHERE " : " AND ");
            if (getFrequency() == null) {
                ret.append("frequency is NULL");
            } else {
                ret.append("frequency = :arg" + (iArgNum++));
            }
        }

        customGetHQL(ret, iArgNum);
        return ret.toString();
    }

    @Override
    public Object[] getArguments() {
        ArrayList<Object> ret = new ArrayList<Object>();

        if (isConceptSet() && getConcept() != null) {
            ret.add(concept);
        }


        if (isStartDateSet()) {
            ret.add(startDate);
        }
        if (isEndDateSet()) {
            ret.add(endDate);
        }


        if (isStartAmountSet()) {
            ret.add(startAmount);
        }
        if (isEndAmountSet()) {
            ret.add(endAmount);
        }


        if (isStartRiseSet()) {
            ret.add(startRise);
        }
        if (isEndRiseSet()) {
            ret.add(endRise);
        }


        if (isObservationsSet() && getObservations() != null) {
            ret.add(observations);
        }


        if (isOwnerIdSet() && getOwnerId() != null) {
            ret.add(ownerId);
        }


        if (isDepartmentIdSet() && getDepartmentId() != null) {
            ret.add(departmentId);
        }


        if (isStartInsertDateSet()) {
            ret.add(startInsertDate);
        }
        if (isEndInsertDateSet()) {
            ret.add(endInsertDate);
        }


        if (isStartUpdateDateSet()) {
            ret.add(startUpdateDate);
        }
        if (isEndUpdateDateSet()) {
            ret.add(endUpdateDate);
        }


        if (isAccountSet() && getAccount() != null) {
            ret.add(account);
        }


        if (isTypeSet() && getType() != null) {
            ret.add(type);
        }


        if (isFrequencySet() && getFrequency() != null) {
            ret.add(frequency);
        }

        customGetArguments(ret);
        return ret.toArray();
    }

    @Override
    public void reset() {

        unsetConcept();


        unsetStartDate();
        unsetEndDate();


        unsetStartAmount();
        unsetEndAmount();


        unsetStartRise();
        unsetEndRise();


        unsetObservations();


        unsetOwnerId();


        unsetDepartmentId();


        unsetStartInsertDate();
        unsetEndInsertDate();


        unsetStartUpdateDate();
        unsetEndUpdateDate();


        unsetAccount();


        unsetType();


        unsetFrequency();

        customReset();
    }

    @Override
    public String toString() {
        StringBuilder ret = new StringBuilder();
        ret.append("PeriodicalAccountEntrySearch{");


        if (isConceptSet()) {
            ret.append("(concept");
            ret.append("=" + concept);
            ret.append(")");
        }


        if (isStartDateSet()) {
            ret.append("(startDate");
            ret.append("=" + startDate);
            ret.append(")");
        }
        if (isEndDateSet()) {
            ret.append("(endDate");
            ret.append("=" + endDate);
            ret.append(")");
        }


        if (isStartAmountSet()) {
            ret.append("(startAmount");
            ret.append("=" + startAmount);
            ret.append(")");
        }
        if (isEndAmountSet()) {
            ret.append("(endAmount");
            ret.append("=" + endAmount);
            ret.append(")");
        }


        if (isStartRiseSet()) {
            ret.append("(startRise");
            ret.append("=" + startRise);
            ret.append(")");
        }
        if (isEndRiseSet()) {
            ret.append("(endRise");
            ret.append("=" + endRise);
            ret.append(")");
        }


        if (isObservationsSet()) {
            ret.append("(observations");
            ret.append("=" + observations);
            ret.append(")");
        }


        if (isOwnerIdSet()) {
            ret.append("(ownerId");
            ret.append("=" + ownerId);
            ret.append(")");
        }


        if (isDepartmentIdSet()) {
            ret.append("(departmentId");
            ret.append("=" + departmentId);
            ret.append(")");
        }


        if (isStartInsertDateSet()) {
            ret.append("(startInsertDate");
            ret.append("=" + startInsertDate);
            ret.append(")");
        }
        if (isEndInsertDateSet()) {
            ret.append("(endInsertDate");
            ret.append("=" + endInsertDate);
            ret.append(")");
        }


        if (isStartUpdateDateSet()) {
            ret.append("(startUpdateDate");
            ret.append("=" + startUpdateDate);
            ret.append(")");
        }
        if (isEndUpdateDateSet()) {
            ret.append("(endUpdateDate");
            ret.append("=" + endUpdateDate);
            ret.append(")");
        }


        if (isAccountSet()) {
            ret.append("(account");
            ret.append("=" + account);
            ret.append(")");
        }


        if (isTypeSet()) {
            ret.append("(type");
            ret.append("=" + type);
            ret.append(")");
        }


        if (isFrequencySet()) {
            ret.append("(frequency");
            ret.append("=" + frequency);
            ret.append(")");
        }


        customToString(ret);
        ret.append("}");
        return ret.toString();
    }

    // Getters and setters


    public boolean isConceptSet() {
        return conceptSet;
    }

    public String getConcept() {
        return concept;
    }

    public void setConcept(String concept) {
        this.concept = concept;
        this.conceptSet = true;
    }

    public void unsetConcept() {
        this.conceptSet = false;
    }


    public boolean isStartDateSet() {
        return startDateSet;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
        this.startDateSet = true;
    }

    public void unsetStartDate() {
        this.startDateSet = false;
    }

    public boolean isEndDateSet() {
        return endDateSet;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
        this.endDateSet = true;
    }

    public void unsetEndDate() {
        this.endDateSet = false;
    }


    public boolean isStartAmountSet() {
        return startAmountSet;
    }

    public BigDecimal getStartAmount() {
        return startAmount;
    }

    public void setStartAmount(BigDecimal startAmount) {
        this.startAmount = startAmount;
        this.startAmountSet = true;
    }

    public void unsetStartAmount() {
        this.startAmountSet = false;
    }

    public boolean isEndAmountSet() {
        return endAmountSet;
    }

    public BigDecimal getEndAmount() {
        return endAmount;
    }

    public void setEndAmount(BigDecimal endAmount) {
        this.endAmount = endAmount;
        this.endAmountSet = true;
    }

    public void unsetEndAmount() {
        this.endAmountSet = false;
    }


    public boolean isStartRiseSet() {
        return startRiseSet;
    }

    public BigDecimal getStartRise() {
        return startRise;
    }

    public void setStartRise(BigDecimal startRise) {
        this.startRise = startRise;
        this.startRiseSet = true;
    }

    public void unsetStartRise() {
        this.startRiseSet = false;
    }

    public boolean isEndRiseSet() {
        return endRiseSet;
    }

    public BigDecimal getEndRise() {
        return endRise;
    }

    public void setEndRise(BigDecimal endRise) {
        this.endRise = endRise;
        this.endRiseSet = true;
    }

    public void unsetEndRise() {
        this.endRiseSet = false;
    }


    public boolean isObservationsSet() {
        return observationsSet;
    }

    public String getObservations() {
        return observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
        this.observationsSet = true;
    }

    public void unsetObservations() {
        this.observationsSet = false;
    }


    public boolean isOwnerIdSet() {
        return ownerIdSet;
    }

    public Integer getOwnerId() {
        return ownerId;
    }

    public void setOwnerId(Integer ownerId) {
        this.ownerId = ownerId;
        this.ownerIdSet = true;
    }

    public void unsetOwnerId() {
        this.ownerIdSet = false;
    }


    public boolean isDepartmentIdSet() {
        return departmentIdSet;
    }

    public Integer getDepartmentId() {
        return departmentId;
    }

    public void setDepartmentId(Integer departmentId) {
        this.departmentId = departmentId;
        this.departmentIdSet = true;
    }

    public void unsetDepartmentId() {
        this.departmentIdSet = false;
    }


    public boolean isStartInsertDateSet() {
        return startInsertDateSet;
    }

    public Date getStartInsertDate() {
        return startInsertDate;
    }

    public void setStartInsertDate(Date startInsertDate) {
        this.startInsertDate = startInsertDate;
        this.startInsertDateSet = true;
    }

    public void unsetStartInsertDate() {
        this.startInsertDateSet = false;
    }

    public boolean isEndInsertDateSet() {
        return endInsertDateSet;
    }

    public Date getEndInsertDate() {
        return endInsertDate;
    }

    public void setEndInsertDate(Date endInsertDate) {
        this.endInsertDate = endInsertDate;
        this.endInsertDateSet = true;
    }

    public void unsetEndInsertDate() {
        this.endInsertDateSet = false;
    }


    public boolean isStartUpdateDateSet() {
        return startUpdateDateSet;
    }

    public Date getStartUpdateDate() {
        return startUpdateDate;
    }

    public void setStartUpdateDate(Date startUpdateDate) {
        this.startUpdateDate = startUpdateDate;
        this.startUpdateDateSet = true;
    }

    public void unsetStartUpdateDate() {
        this.startUpdateDateSet = false;
    }

    public boolean isEndUpdateDateSet() {
        return endUpdateDateSet;
    }

    public Date getEndUpdateDate() {
        return endUpdateDate;
    }

    public void setEndUpdateDate(Date endUpdateDate) {
        this.endUpdateDate = endUpdateDate;
        this.endUpdateDateSet = true;
    }

    public void unsetEndUpdateDate() {
        this.endUpdateDateSet = false;
    }


    public boolean isAccountSet() {
        return accountSet;
    }

    public Account getAccount() {
        return account;
    }

    public void setAccount(Account account) {
        this.account = account;
        this.accountSet = true;
    }

    public void unsetAccount() {
        this.accountSet = false;
    }


    public boolean isTypeSet() {
        return typeSet;
    }

    public AccountEntryType getType() {
        return type;
    }

    public void setType(AccountEntryType type) {
        this.type = type;
        this.typeSet = true;
    }

    public void unsetType() {
        this.typeSet = false;
    }


    public boolean isFrequencySet() {
        return frequencySet;
    }

    public Frequency getFrequency() {
        return frequency;
    }

    public void setFrequency(Frequency frequency) {
        this.frequency = frequency;
        this.frequencySet = true;
    }

    public void unsetFrequency() {
        this.frequencySet = false;
    }

    // Fields

    private boolean conceptSet;
    private String concept;


    private boolean startDateSet;
    private Date startDate;
    private boolean endDateSet;
    private Date endDate;


    private boolean startAmountSet;
    private BigDecimal startAmount;
    private boolean endAmountSet;
    private BigDecimal endAmount;


    private boolean startRiseSet;
    private BigDecimal startRise;
    private boolean endRiseSet;
    private BigDecimal endRise;


    private boolean observationsSet;
    private String observations;


    private boolean ownerIdSet;
    private Integer ownerId;


    private boolean departmentIdSet;
    private Integer departmentId;


    private boolean startInsertDateSet;
    private Date startInsertDate;
    private boolean endInsertDateSet;
    private Date endInsertDate;


    private boolean startUpdateDateSet;
    private Date startUpdateDate;
    private boolean endUpdateDateSet;
    private Date endUpdateDate;


    private boolean accountSet;
    private Account account;


    private boolean typeSet;
    private AccountEntryType type;


    private boolean frequencySet;
    private Frequency frequency;


    // Returns if there are a search condition active
    public boolean isSearchActive() {
        return customIsSearchActive() || conceptSet || startDateSet || endDateSet || startAmountSet || endAmountSet || startRiseSet || endRiseSet || observationsSet || ownerIdSet || departmentIdSet || startInsertDateSet || endInsertDateSet || startUpdateDateSet || endUpdateDateSet || accountSet || typeSet || frequencySet;
    }

/* generated by stajanov (do not edit/delete) */

    private void customGetHQL(StringBuilder ret, int iArgNum) {
    }

    private boolean customIsSearchActive() {
        return false;
    }

    private void customToString(StringBuilder ret) {
    }

    private void customReset() {
    }

    private void customGetArguments(ArrayList ret) {
    }
}
