/*
 *  TNTConcept Easy Enterprise Management by Autentia Real Bussiness Solution S.L.
 *	Copyright (C) 2007 Autentia Real Bussiness Solution S.L.
 *
 * 	This program is free software; you can redistribute it and/or
 * 	modify it under the terms of the GNU General Public License
 * 	as published by the Free Software Foundation; either version 2
 * 	of the License, or (at your option) any later version.
 *
 * 	This program is distributed in the hope that it will be useful,
 * 	but WITHOUT ANY WARRANTY; without even the implied warranty of
 * 	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * 	GNU General Public License for more details.
 *
 * 	You should have received a copy of the GNU General Public License
 * 	along with this program; if not, write to the Free Software
 * 	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * 	Autentia Real Bussiness Solution S.L.
 * 	Tlf: +34 91 675 33 06, +34 655 99 11 72
 * 	Fax: +34 91 656 65 04
 * 	info@autentia.com
 */

package com.autentia.intra.manager.admin;

import com.autentia.intra.businessobject.User;
import com.autentia.intra.dao.SortCriteria;
import com.autentia.intra.dao.hibernate.UserDAO;
import com.autentia.intra.dao.search.UserSearch;
import com.autentia.intra.util.SpringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.util.List;


public class UserManager {

/* user - generated by stajanov (do not edit/delete) */


    /**
     * Logger
     */
    private static final Log log = LogFactory.getLog(UserManager.class);

    /**
     * User DAO *
     */
    private UserDAO userDAO;

    /**
     * Get default UserManager as defined in Spring's configuration file.
     *
     * @return the default singleton UserManager
     */
    public static UserManager getDefault() {
        return (UserManager) SpringUtils.getSpringBean("managerUser");
    }

    /**
     * Empty constructor needed by CGLIB (Spring AOP)
     */
    protected UserManager() {
    }

    /**
     * Default constructor
     *
     * @deprecated do not construct managers alone: use Spring's declared beans
     */
    public UserManager(UserDAO userDAO) {
        this.userDAO = userDAO;
    }

    /**
     * List users.
     *
     * @param search search filter to apply
     * @param sort   sorting criteria
     * @return the list of all users sorted by requested criterion
     */
    public List<User> getAllEntities(UserSearch search, SortCriteria sort) {
        return userDAO.search(search, sort);
    }

    /**
     * Get user by primary key.
     *
     * @return user selected by id.
     */
    public User getEntityById(int id) {
        return userDAO.getById(id);
    }

    /**
     * Insert user.
     */
    public void insertEntity(User user) {
        userDAO.insert(user);
    }

    /**
     * Update user.
     */
    public void updateEntity(User user) {
        userDAO.update(user);
    }

    /**
     * Delete user.
     */
    public void deleteEntity(User user) {
        userDAO.delete(user);
    }

/* user - generated by stajanov (do not edit/delete) */

}
